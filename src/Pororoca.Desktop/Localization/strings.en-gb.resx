<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GoBack/Hint" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="MacOSXUserDataFolderMigratedV3Dialog/Title" xml:space="preserve">
    <value>Pororoca - User data folder migrated</value>
  </data>
  <data name="MacOSXUserDataFolderMigratedV3Dialog/Message" xml:space="preserve">
    <value>Your user data directory is now located at:\\n{0}\\nYou can backup and manually delete the PororocaUserData folder inside Applications.</value>
  </data>
  <data name="Welcome/Title" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="Welcome/NewCollection" xml:space="preserve">
    <value>New collection</value>
  </data>
  <data name="Welcome/ImportCollection" xml:space="preserve">
    <value>Import collection…</value>
  </data>
  <data name="Welcome/ImportOpenAPI" xml:space="preserve">
    <value>Import OpenAPI…</value>
  </data>
  <data name="Welcome/OpenDocsWebsite" xml:space="preserve">
    <value>Go to docs</value>
  </data>
  <data name="Welcome/VisitGitHubRepo" xml:space="preserve">
    <value>Visit GitHub repo</value>
  </data>
  <data name="CannotCopyOrCutCollectionDialog/Title" xml:space="preserve">
    <value>Pororoca - Copy items</value>
  </data>
  <data name="CannotCopyOrCutCollectionDialog/Content" xml:space="preserve">
    <value>You can duplicate, but not copy or cut a collection.</value>
  </data>
  <data name="CannotPasteItemToItselfDialog/Title" xml:space="preserve">
    <value>Pororoca - Cut items</value>
  </data>
  <data name="CannotPasteItemToItselfDialog/Content" xml:space="preserve">
    <value>Cannot paste a cut item to itself.</value>
  </data>
  <data name="Collection/AddEnvironment" xml:space="preserve">
    <value>Add environment</value>
  </data>
  <data name="Collection/AddFolder" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="Collection/AddHttpRequest" xml:space="preserve">
    <value>Add HTTP request</value>
  </data>
  <data name="Collection/AddWebSocketConnection" xml:space="preserve">
    <value>Add WebSocket</value>
  </data>
  <data name="Collection/AddHttpRepeater" xml:space="preserve">
    <value>Add HTTP repeater</value>
  </data>
  <data name="Collection/SetCollectionScopedHeaders" xml:space="preserve">
    <value>Set collection headers</value>
  </data>
  <data name="Collection/ChooseImportExportFormat" xml:space="preserve">
    <value>Choose format</value>
  </data>
  <data name="Collection/ExportCollection" xml:space="preserve">
    <value>Export collection…</value>
  </data>  
  <data name="Collection/ImportCollectionDialogTitle" xml:space="preserve">
    <value>Import collection / OpenAPI files</value>
  </data>
  <data name="Collection/ImportCollectionDialogTypes" xml:space="preserve">
    <value>Collection / OpenAPI files</value>
  </data>
  <data name="Collection/FailedToImportCollectionDialogTitle" xml:space="preserve">
    <value>Pororoca - Import collection / OpenAPI</value>
  </data>
  <data name="Collection/FailedToImportCollectionDialogMessage" xml:space="preserve">
    <value>Failed to import collection / OpenAPI file.\\n\\nAccepted types:\\n\\n- Pororoca collection\\n- Postman collection v2.1\\n- OpenAPI (Swagger), in JSON or YAML\\n- Insomnia collection</value>
  </data>
  <data name="Collection/ImportEnvironment" xml:space="preserve">
    <value>Import environment…</value>
  </data>
  <data name="Collection/ImportEnvironmentDialogTitle" xml:space="preserve">
    <value>Import environment files</value>
  </data>
  <data name="Collection/ImportEnvironmentDialogTypes" xml:space="preserve">
    <value>Environment files</value>
  </data>
  <data name="Collection/FailedToImportEnvironmentDialogTitle" xml:space="preserve">
    <value>Pororoca - Import environment</value>
  </data>
  <data name="Collection/FailedToImportEnvironmentDialogMessage" xml:space="preserve">
    <value>Failed to import environment file.\\n\\nAccepted types:\\n\\n- Pororoca environment\\n- Postman environment</value>
  </data>
  <data name="Collection/NewCollection" xml:space="preserve">
    <value>New collection</value>
  </data>
  <data name="CollectionFolder/AddFolder" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="CollectionFolder/AddHttpRequest" xml:space="preserve">
    <value>Add HTTP request</value>
  </data>
  <data name="CollectionFolder/AddWebSocketConnection" xml:space="preserve">
    <value>Add WebSocket</value>
  </data>
  <data name="CollectionFolder/AddHttpRepeater" xml:space="preserve">
    <value>Add HTTP repeater</value>
  </data>
  <data name="CollectionScopedAuth/Title" xml:space="preserve">
    <value>Collection-scoped auth</value>
  </data>
  <data name="CollectionScopedRequestHeaders/Title" xml:space="preserve">
    <value>Collection-scoped request headers</value>
  </data>
  <data name="CollectionVariables/AddVariable" xml:space="preserve">
    <value>Add variable</value>
  </data>
  <data name="CollectionVariables/RemoveVariable" xml:space="preserve">
    <value>Remove variable</value>
  </data>
  <data name="CollectionVariables/Tip" xml:space="preserve">
    <value>Tip: To use a variable, type {{VariableName}} in the URL, body, authentication or header of your request. When sending the request, the {{VariableName}} text will be replaced by the variable's value.</value>
  </data>
  <data name="CollectionVariables/Title" xml:space="preserve">
    <value>Collection variables</value>
  </data>
  <data name="Variables/Enabled" xml:space="preserve">
    <value>ENABLED</value>
  </data>
  <data name="Variables/IsSecret" xml:space="preserve">
    <value>IS SECRET</value>
  </data>
  <data name="Variables/Name" xml:space="preserve">
    <value>VARIABLE NAME</value>
  </data>
  <data name="Variables/Value" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="CollectionsGroup/CollectionScopedAuth" xml:space="preserve">
    <value>Auth</value>
  </data>
  <data name="CollectionsGroup/Environments" xml:space="preserve">
    <value>Environments</value>
  </data>
  <data name="CollectionsGroup/Variables" xml:space="preserve">
    <value>Variables</value>
  </data>
  <data name="ContextMenu/Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ContextMenu/Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="ContextMenu/Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ContextMenu/Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="ContextMenu/Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ContextMenu/ImportEnvironment" xml:space="preserve">
    <value>Import environment…</value>
  </data>
  <data name="ContextMenu/MoveDown" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="ContextMenu/MoveUp" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="ContextMenu/NewEnvironment" xml:space="preserve">
    <value>New environment</value>
  </data>
  <data name="ContextMenu/NewFolder" xml:space="preserve">
    <value>New folder</value>
  </data>
  <data name="ContextMenu/NewHttpRequest" xml:space="preserve">
    <value>New HTTP request</value>
  </data>
  <data name="ContextMenu/NewHttpRepeater" xml:space="preserve">
    <value>New HTTP repeater</value>
  </data>
  <data name="ContextMenu/NewWebSocketClientMessage" xml:space="preserve">
    <value>New client message</value>
  </data>
  <data name="ContextMenu/NewWebSocketConnection" xml:space="preserve">
    <value>New WebSocket</value>
  </data>
  <data name="ContextMenu/Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="ContextMenu/Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="ContextMenu/SetAsCurrentEnvironment" xml:space="preserve">
    <value>Set as current environment</value>
  </data>
  <data name="DeleteItemsDialog/Title" xml:space="preserve">
    <value>Pororoca - Delete items</value>
  </data>
  <data name="DeleteItemsDialog/MessageSingleItem" xml:space="preserve">
    <value>Are you sure you want to delete '{0}'?</value>
  </data>
  <data name="DeleteItemsDialog/MessageMultipleItems" xml:space="preserve">
    <value>Are you sure you want to delete the selected items?</value>
  </data>
  <data name="EditableTextBlock/RenameToolTip" xml:space="preserve">
    <value>Rename (F2)</value>
  </data>
  <data name="Environment/AddVariable" xml:space="preserve">
    <value>Add variable</value>
  </data>
  <data name="Environment/ExportEnvironment" xml:space="preserve">
    <value>Export environment…</value>
  </data>
  <data name="Environment/NewEnvironment" xml:space="preserve">
    <value>New environment</value>
  </data>
  <data name="Environment/RemoveVariable" xml:space="preserve">
    <value>Remove variable</value>
  </data>
  <data name="Environment/SetAsCurrentEnvironment" xml:space="preserve">
    <value>Set as current environment</value>
  </data>
  <data name="Environment/UnsetAsCurrentEnvironment" xml:space="preserve">
    <value>Disable as current environment</value>
  </data>
  <data name="Environment/Tip" xml:space="preserve">
    <value>Tip: If an environment variable has the same name of an other collection variable, the value of the environment variable will be the one applied.</value>
  </data>
  <data name="ExportCollection/Title" xml:space="preserve">
    <value>Export collection…</value>
  </data>
  <data name="ExportCollection/Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ExportCollection/Format" xml:space="preserve">
    <value>Format: </value>
  </data>
  <data name="ExportCollection/DialogTitle" xml:space="preserve">
    <value>Export collection to file</value>
  </data>
  <data name="ExportCollection/IncludeCollectionVariablesSecrets" xml:space="preserve">
    <value>Include collection secret variables</value>
  </data>
  <data name="ExportCollection/PororocaCollectionFormat" xml:space="preserve">
    <value>Pororoca collection</value>
  </data>
  <data name="ExportCollection/PostmanCollectionFormat" xml:space="preserve">
    <value>Postman collection v2.1</value>
  </data>
  <data name="ExportCollection/EnvironmentInclude" xml:space="preserve">
    <value>INCLUDE</value>
  </data>
  <data name="ExportCollection/EnvironmentName" xml:space="preserve">
    <value>ENVIRONMENT</value>
  </data>
  <data name="ExportCollection/EnvironmentWithSecretVariables" xml:space="preserve">
    <value>WITH SECRETS</value>
  </data>
  <data name="ExportEnvironment/Title" xml:space="preserve">
    <value>Export environment…</value>
  </data>
  <data name="ExportEnvironment/Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ExportEnvironment/Format" xml:space="preserve">
    <value>Format: </value>
  </data>
  <data name="ExportEnvironment/DialogTitle" xml:space="preserve">
    <value>Export environment to file</value>
  </data>
  <data name="ExportEnvironment/IncludeVariablesSecrets" xml:space="preserve">
    <value>Include secret variables</value>
  </data>
  <data name="ExportEnvironment/PororocaEnvironmentFormat" xml:space="preserve">
    <value>Pororoca environment</value>
  </data>
  <data name="ExportEnvironment/PostmanEnvironmentFormat" xml:space="preserve">
    <value>Postman environment</value>
  </data>
  <data name="Folder/NewFolder" xml:space="preserve">
    <value>New folder</value>
  </data>
  <data name="SelectFolderDialog/Title" xml:space="preserve">
    <value>Select destination folder</value>
  </data>
  <data name="HelpDialog/Title" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpDialog/Content" xml:space="preserve">
    <value>Keyboard shortcuts\\n\\nF1 - Show help\\nF2 - Rename\\nF4 - Focus on URL\\nF5 - Send request / connect WebSocket\\nF6 - Cancel request / disconnect WebSocket\\nF7 - Set previous environment as active\\nF8 - Set next environment as active\\nF9 - Save response body to file\\nF10 - Export HTTP log to file\\nCtrl+PageUp - Switch to item above in tree\\nCtrl+PageDown - Switch to item below in tree\\nCtrl+Shift+S - Save all\\n\\nFull documentation on site: https://pororoca.io</value>
  </data>
  <data name="HttpRepeater/NewRepeater" xml:space="preserve">
    <value>New HTTP repeater</value>
  </data>
  <data name="HttpRepeater/SelectBaseRequest" xml:space="preserve">
    <value>(select the base http request)</value>
  </data>
  <data name="HttpRepeater/RefreshBaseRequestsListTip" xml:space="preserve">
    <value>Refresh list</value>
  </data>
  <data name="HttpRepeater/Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="HttpRepeater/StartTip" xml:space="preserve">
    <value>Start (F5)</value>
  </data>
  <data name="HttpRepeater/Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="HttpRepeater/StopTip" xml:space="preserve">
    <value>Stop (F6)</value>
  </data>
  <data name="HttpRepeater/RepetitionSectionTitle" xml:space="preserve">
    <value>Repetition</value>
  </data>
  <data name="HttpRepeater/RepetitionMode" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="HttpRepeater/RepetitionModeSimple" xml:space="preserve">
    <value>Simple</value>
  </data>
  <data name="HttpRepeater/RepetitionModeSequential" xml:space="preserve">
    <value>Sequential</value>
  </data>
  <data name="HttpRepeater/RepetitionModeRandom" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="HttpRepeater/NumberOfRepetitions" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="HttpRepeater/MaxDOP" xml:space="preserve">
    <value>Parallelism</value>
  </data>
  <data name="HttpRepeater/Delay" xml:space="preserve">
    <value>Delay (ms)</value>
  </data>
  <data name="HttpRepeater/DelayTip" xml:space="preserve">
    <value>Waiting time between a response and sending the next request.</value>
  </data>
  <data name="HttpRepeater/InputData" xml:space="preserve">
    <value>Input data</value>
  </data>
  <data name="HttpRepeater/InputDataTypeRaw" xml:space="preserve">
    <value>Raw JSON array</value>
  </data>
  <data name="HttpRepeater/InputDataTypeRawComment" xml:space="preserve">
    <value>comments are allowed</value>
  </data>
  <data name="HttpRepeater/InputDataTypeFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="HttpRepeater/InputDataFileSrcPathWatermark" xml:space="preserve">
    <value>(file src path)</value>
  </data>
  <data name="HttpRepeater/InputDataFileSearch" xml:space="preserve">
    <value>Search file…</value>
  </data>
  <data name="HttpRepeater/ExportReport" xml:space="preserve">
    <value>Export report…</value>
  </data>
  <data name="HttpRepeater/SaveAllResponses" xml:space="preserve">
    <value>Save all responses…</value>
  </data>
  <data name="HttpRepeater/ExportAllLogs" xml:space="preserve">
    <value>Export all logs…</value>
  </data>
  <data name="HttpRepeater/InputLine" xml:space="preserve">
    <value>Input line</value>
  </data>
  <data name="HttpRepeater/InputLineKey" xml:space="preserve">
    <value>VARIABLE NAME</value>
  </data>
  <data name="HttpRepeater/InputLineValue" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="HttpRepeater/RepetitionOngoingStatus" xml:space="preserve">
    <value>{0}/{1} repetitions, {2} successful. Estimated time remaining: {3}.</value>
  </data>
  <data name="HttpRepeater/RepetitionFinishedStatus" xml:space="preserve">
    <value>Finished {0} repetitions, {1} successful. Elapsed time: {2}.</value>
  </data>
  <data name="HttpRepeater/RepetitionSuccessTip" xml:space="preserve">
    <value>Successful: HTTP 2xx status code.</value>
  </data>
  <data name="HttpRepeater/RepetitionResultCancelled" xml:space="preserve">
    <value>cancelled</value>
  </data>
  <data name="HttpRepeater/RepetitionResultException" xml:space="preserve">
    <value>exception</value>
  </data>
  <data name="HttpRepeater/Results" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="HttpRequest/Body" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="HttpRequest/BodyFileContentTypeWatermark" xml:space="preserve">
    <value>(file content-type)</value>
  </data>
  <data name="HttpRequest/BodyFileSearchFile" xml:space="preserve">
    <value>Search file…</value>
  </data>
  <data name="HttpRequest/BodyFileSrcPathWatermark" xml:space="preserve">
    <value>(file path)</value>
  </data>
  <data name="HttpRequest/BodyFormDataFileParamAdd" xml:space="preserve">
    <value>Add file</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamContentType" xml:space="preserve">
    <value>CONTENT-TYPE</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamEnabled" xml:space="preserve">
    <value>ENABLED</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamName" xml:space="preserve">
    <value>NAME</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamTextOrSrcPath" xml:space="preserve">
    <value>TEXT / PATH</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamType" xml:space="preserve">
    <value>TYPE</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamTypeFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="HttpRequest/BodyFormDataParamTypeText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="HttpRequest/BodyFormDataTextParamAdd" xml:space="preserve">
    <value>Add text</value>
  </data>
  <data name="HttpRequest/BodyGraphQlQueryWatermark" xml:space="preserve">
    <value>(graph ql query here)</value>
  </data>
  <data name="HttpRequest/BodyGraphQlVariablesWatermark" xml:space="preserve">
    <value>(graph ql variables here)</value>
  </data>
  <data name="HttpRequest/BodyModeFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="HttpRequest/BodyModeFormData" xml:space="preserve">
    <value>Form Data</value>
  </data>
  <data name="HttpRequest/BodyModeGraphQl" xml:space="preserve">
    <value>Graph QL</value>
  </data>
  <data name="HttpRequest/BodyModeNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="HttpRequest/BodyModeRaw" xml:space="preserve">
    <value>Raw</value>
  </data>
  <data name="HttpRequest/BodyModeUrlEncoded" xml:space="preserve">
    <value>URL encoded</value>
  </data>
  <data name="HttpRequest/BodyRawContentTypeWatermark" xml:space="preserve">
    <value>(raw content-type here)</value>
  </data>
  <data name="HttpRequest/BodyRawContentWatermark" xml:space="preserve">
    <value>(raw body here)</value>
  </data>
  <data name="HttpRequest/BodyUrlEncodedParamAdd" xml:space="preserve">
    <value>Add param</value>
  </data>
  <data name="HttpRequest/BodyUrlEncodedParamEnabled" xml:space="preserve">
    <value>ENABLED</value>
  </data>
  <data name="HttpRequest/BodyUrlEncodedParamName" xml:space="preserve">
    <value>PARAMETER NAME</value>
  </data>
  <data name="HttpRequest/BodyUrlEncodedParamRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="HttpRequest/BodyUrlEncodedParamValue" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="HttpRequest/CancelRequest" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="HttpRequest/CancelRequestToolTip" xml:space="preserve">
    <value>Cancel (F6)</value>
  </data>
  <data name="HttpRequest/CustomAuth" xml:space="preserve">
    <value>Custom Auth</value>
  </data>
  <data name="HttpRequest/HeaderAdd" xml:space="preserve">
    <value>Add header</value>
  </data>
  <data name="HttpRequest/HeaderEnabled" xml:space="preserve">
    <value>ENABLED</value>
  </data>
  <data name="HttpRequest/HeaderName" xml:space="preserve">
    <value>HEADER NAME</value>
  </data>
  <data name="HttpRequest/HeaderRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="HttpRequest/HeaderValue" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="HttpRequest/Headers" xml:space="preserve">
    <value>Headers</value>
  </data>
  <data name="HttpRequest/NewRequest" xml:space="preserve">
    <value>New HTTP request</value>
  </data>
  <data name="HttpRequest/SectionTitle" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="HttpRequest/SendRequest" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="HttpRequest/SendRequestToolTip" xml:space="preserve">
    <value>Send (F5)</value>
  </data>
  <data name="HttpRequest/UrlWatermark" xml:space="preserve">
    <value>(request url here)</value>
  </data>
  <data name="HttpResponse/Body" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="HttpResponse/BodyContentBinaryNotShown" xml:space="preserve">
    <value>(binary content not shown, {0} bytes)</value>
  </data>
  <data name="HttpResponse/BodyContentTypeWatermark" xml:space="preserve">
    <value>(response content-type here)</value>
  </data>
  <data name="HttpResponse/BodyContentWatermark" xml:space="preserve">
    <value>(response body here)</value>
  </data>
  <data name="HttpResponse/BodyCouldNotReadAsUTF8" xml:space="preserve">
    <value>(could not read body as UTF-8 text, {0} bytes)</value>
  </data>
  <data name="HttpResponse/BodySaveToFile" xml:space="preserve">
    <value>Save as…</value>
  </data>
  <data name="HttpResponse/BodySaveToFileToolTip" xml:space="preserve">
    <value>Save as… (F9)</value>
  </data>
  <data name="HttpResponse/ExportLog" xml:space="preserve">
    <value>Export log…</value>
  </data>
  <data name="HttpResponse/ExportLogToolTip" xml:space="preserve">
    <value>Export log… (F10)</value>
  </data>
  <data name="HttpResponse/DisableTlsVerification" xml:space="preserve">
    <value>Disable TLS verification</value>
  </data>
  <data name="TimeText/MillisecondsFormat" xml:space="preserve">
    <value>{0}ms</value>
  </data>
  <data name="TimeText/HoursAndMinutesFormat" xml:space="preserve">
    <value>{0}h {1]min</value>
  </data>
  <data name="TimeText/MinutesAndSecondsFormat" xml:space="preserve">
    <value>{0}min {1}s</value>
  </data>
  <data name="TimeText/MinutesFormat" xml:space="preserve">
    <value>{0}min</value>
  </data>
  <data name="TimeText/SecondsFormat" xml:space="preserve">
    <value>{0:0.00}s</value>
  </data>
  <data name="HttpResponse/HeaderName" xml:space="preserve">
    <value>HEADER NAME</value>
  </data>
  <data name="HttpResponse/HeaderValue" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="HttpResponse/Headers" xml:space="preserve">
    <value>Headers</value>
  </data>
  <data name="HttpResponse/SectionTitle" xml:space="preserve">
    <value>Response</value>
  </data>
  <data name="HttpResponse/SectionTitleFailedFormat" xml:space="preserve">
    <value>Response: Failed ({0})</value>
  </data>
  <data name="HttpResponse/SectionTitleSuccessfulFormat" xml:space="preserve">
    <value>Response: {0} ({1})</value>
  </data>
  <data name="HttpResponse/Capture" xml:space="preserve">
    <value>Capture</value>
  </data>
  <data name="HttpResponse/CaptureAddHeaderCapture" xml:space="preserve">
    <value>Add header capture</value>
  </data>
  <data name="HttpResponse/CaptureAddBodyCapture" xml:space="preserve">
    <value>Add body capture</value>
  </data>
  <data name="HttpResponse/CaptureTargetVariable" xml:space="preserve">
    <value>TARGET VARIABLE</value>
  </data>
  <data name="HttpResponse/CaptureType" xml:space="preserve">
    <value>TYPE</value>
  </data>
  <data name="HttpResponse/CaptureTypeHeader" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="HttpResponse/CaptureTypeBody" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="HttpResponse/CaptureHeaderNameOrBodyPath" xml:space="preserve">
    <value>HEADER NAME / BODY PATH</value>
  </data>
  <data name="HttpResponse/CaptureCapturedValue" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="HttpResponse/ExecuteCapturesTooltip" xml:space="preserve">
    <value>Execute captures</value>
  </data>
  <data name="HttpResponse/CaptureTip" xml:space="preserve">
    <value>Tip: For JSON value capture: $.myProp[0].myProp2 ($ means root, [0] means array element). For XML value capture, use XPath 1.0 syntax.\\n\\nCaptured values are saved into current environment variables. If no environment is active, then into collection variables.</value>
  </data>
  <data name="RequestAuth/AuthModeInheritFromCollection" xml:space="preserve">
    <value>Inherit from collection</value>
  </data>
  <data name="RequestAuth/AuthModeBasic" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="RequestAuth/AuthModeBasicLoginWatermark" xml:space="preserve">
    <value>(basic auth login)</value>
  </data>
  <data name="RequestAuth/AuthModeBasicPasswordWatermark" xml:space="preserve">
    <value>(basic auth password)</value>
  </data>
  <data name="RequestAuth/AuthModeBearer" xml:space="preserve">
    <value>Bearer</value>
  </data>
  <data name="RequestAuth/AuthModeBearerTokenWatermark" xml:space="preserve">
    <value>(bearer auth token)</value>
  </data>
  <data name="RequestAuth/AuthModeClientCertificate" xml:space="preserve">
    <value>Client certificate</value>
  </data>
  <data name="RequestAuth/AuthModeNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="RequestAuth/AuthModeWindows" xml:space="preserve">
    <value>Windows / NTLM</value>
  </data>
  <data name="RequestAuth/AuthModeWindowsUseCurrentUser" xml:space="preserve">
    <value>Use current user</value>
  </data>
  <data name="RequestAuth/AuthModeWindowsLoginWatermark" xml:space="preserve">
    <value>(login)</value>
  </data>
  <data name="RequestAuth/AuthModeWindowsPasswordWatermark" xml:space="preserve">
    <value>(password)</value>
  </data>
  <data name="RequestAuth/AuthModeWindowsDomainWatermark" xml:space="preserve">
    <value>(domain)</value>
  </data>
  <data name="RequestAuth/CertificateFilePathWatermark" xml:space="preserve">
    <value>(certificate file path here)</value>
  </data>
  <data name="RequestAuth/ClientCertificateTypeNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="RequestAuth/ClientCertificateTypePem" xml:space="preserve">
    <value>PEM</value>
  </data>
  <data name="RequestAuth/ClientCertificateTypePkcs12" xml:space="preserve">
    <value>PKCS#12</value>
  </data>
  <data name="RequestAuth/FilePasswordWatermark" xml:space="preserve">
    <value>(file password here)</value>
  </data>
  <data name="RequestAuth/PemClientCertificatesTip" xml:space="preserve">
    <value>Tip: If the certificate file contains the private key, leave the private key path blank. The password is required only if the private key is encrypted.</value>
  </data>
  <data name="RequestAuth/PemImportCertificateFileDialogTitle" xml:space="preserve">
    <value>Import certificate in PEM format</value>
  </data>
  <data name="RequestAuth/PemImportCertificateFileTypesDescription" xml:space="preserve">
    <value>PEM certificates</value>
  </data>
  <data name="RequestAuth/PemImportPrivateKeyFileDialogTitle" xml:space="preserve">
    <value>Import private key in PEM format</value>
  </data>
  <data name="RequestAuth/PemImportPrivateKeyFileTypesDescription" xml:space="preserve">
    <value>PEM private keys</value>
  </data>
  <data name="RequestAuth/PemSearchCertFile" xml:space="preserve">
    <value>Search certificate…</value>
  </data>
  <data name="RequestAuth/PemSearchPrivateKeyFile" xml:space="preserve">
    <value>Search private key…</value>
  </data>
  <data name="RequestAuth/Pkcs12ImportCertificateFileDialogTitle" xml:space="preserve">
    <value>Import certificate in PKCS12 format</value>
  </data>
  <data name="RequestAuth/Pkcs12ImportCertificateFileTypesDescription" xml:space="preserve">
    <value>PKCS12 certificates</value>
  </data>
  <data name="RequestAuth/Pkcs12SearchFile" xml:space="preserve">
    <value>Search certificate…</value>
  </data>
  <data name="RequestAuth/PrivateKeyFilePathWatermark" xml:space="preserve">
    <value>(private key file path here)</value>
  </data>
  <data name="RequestValidation/WindowsAuthLoginCannotBeBlank" xml:space="preserve">
    <value>The login for Windows authentication cannot be blank.</value>
  </data>
  <data name="RequestValidation/WindowsAuthPasswordCannotBeBlank" xml:space="preserve">
    <value>The password for Windows authentication cannot be blank.</value>
  </data>
  <data name="RequestValidation/WindowsAuthDomainCannotBeBlank" xml:space="preserve">
    <value>The domain for Windows authentication cannot be blank.</value>
  </data>
  <data name="RequestValidation/ClientCertificateFileNotFound" xml:space="preserve">
    <value>Client certificate file not found.</value>
  </data>
  <data name="RequestValidation/ClientCertificatePkcs12PasswordCannotBeBlank" xml:space="preserve">
    <value>PKCS#12 client certificates need a password.</value>
  </data>
  <data name="RequestValidation/ClientCertificatePemPrivateKeyFileNotFound" xml:space="preserve">
    <value>Client certificate private key file not found.</value>
  </data>
  <data name="RequestValidation/ContentTypeCannotBeBlankReqBodyRawOrFile" xml:space="preserve">
    <value>The request body requires a Content-Type.</value>
  </data>
  <data name="RequestValidation/Http2Unavailable" xml:space="preserve">
    <value>On Windows, support for HTTP/2 requires Windows 10 or greater.</value>
  </data>
  <data name="RequestValidation/Http3Unavailable" xml:space="preserve">
    <value>HTTP/3 is only available for Linux with msquic or Windows 11 and greater.</value>
  </data>
  <data name="RequestValidation/InvalidContentTypeFormData" xml:space="preserve">
    <value>One of the Form Data parameters has an invalid Content-Type.</value>
  </data>
  <data name="RequestValidation/InvalidContentTypeRawOrFile" xml:space="preserve">
    <value>Use one of the available Content-Types for the request body.</value>
  </data>
  <data name="RequestValidation/InvalidUnknownCause" xml:space="preserve">
    <value>The request is invalid. Please, check it and try again.</value>
  </data>
  <data name="RequestValidation/InvalidUrl" xml:space="preserve">
    <value>Invalid URL. Please, check it and try again.</value>
  </data>
  <data name="RequestValidation/RepetitionBaseHttpRequestNotSelected" xml:space="preserve">
    <value>Select the base HTTP request to repeat.</value>
  </data>
  <data name="RequestValidation/RepetitionBaseHttpRequestNotFound" xml:space="preserve">
    <value>Base HTTP request not found.</value>
  </data>
  <data name="RequestValidation/RepetitionDelayCantBeNegative" xml:space="preserve">
    <value>The delay has to be greater or equal to zero.</value>
  </data>
  <data name="RequestValidation/RepetitionNumberOfRepetitionsMustBeAtLeast1" xml:space="preserve">
    <value>The number of repetitions needs to be greater or equal to one.</value>
  </data>
  <data name="RequestValidation/RepetitionMaxDopMustBeAtLeast1" xml:space="preserve">
    <value>The parallelism needs to be greater or equal to one.</value>
  </data>
  <data name="RequestValidation/RepetitionInputDataFileNotFound" xml:space="preserve">
    <value>Input data file not found.</value>
  </data>
  <data name="RequestValidation/RepetitionInputDataInvalid" xml:space="preserve">
    <value>Invalid input data JSON array.</value>
  </data>
  <data name="RequestValidation/RepetitionInputDataAtLeastOneLine" xml:space="preserve">
    <value>At least one input line is required.</value>
  </data>
  <data name="RequestValidation/ReqBodyFileNotFound" xml:space="preserve">
    <value>File for request body not found.</value>
  </data>
  <data name="RequestValidation/WebSocketClientMessageContentFileNotFound" xml:space="preserve">
    <value>The file that composes the message was not found.</value>
  </data>
  <data name="RequestValidation/WebSocketCompressionMaxWindowBitsOutOfRange" xml:space="preserve">
    <value>The compression max window bits must be within 9 and 15.</value>
  </data>
  <data name="RequestValidation/WebSocketHttpVersionUnavailable" xml:space="preserve">
    <value>This HTTP version is not available for WebSocket connections.</value>
  </data>
  <data name="RequestValidation/WebSocketNotConnected" xml:space="preserve">
    <value>Not connected.</value>
  </data>
  <data name="RequestValidation/WebSocketUnknownClientMessageTranslationError" xml:space="preserve">
    <value>The message to send is invalid. Please, check it and try again.</value>
  </data>
  <data name="RequestValidation/WebSocketUnknownConnectionTranslationError" xml:space="preserve">
    <value>The connection request is invalid. Please, check it and try again.</value>
  </data>
  <data name="TextEditor/Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="TextEditor/Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="TextEditor/Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="TopMenu/Contribute" xml:space="preserve">
    <value>Contribute</value>
  </data>
  <data name="TopMenu/File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="TopMenu/Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="TopMenu/Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="TopMenu/Saved" xml:space="preserve">
    <value>Saved!</value>
  </data>
  <data name="TopMenuFile/Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="TopMenuFile/SaveAll" xml:space="preserve">
    <value>Save all</value>
  </data>
  <data name="TopMenuFile/ImportFromFile" xml:space="preserve">
    <value>Import from file…</value>
  </data>
  <data name="TopMenuFile/NewCollection" xml:space="preserve">
    <value>New collection</value>
  </data>
  <data name="TopMenuLanguage/English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="TopMenuLanguage/Português" xml:space="preserve">
    <value>Portuguese</value>
  </data>
  <data name="TopMenuLanguage/Russian" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="TopMenuLanguage/Italian" xml:space="preserve">
    <value>Italian</value>
  </data>
  <data name="TopMenuLanguage/SimplifiedChinese" xml:space="preserve">
    <value>Simplified Chinese</value>
  </data>
  <data name="TopMenuOptions/EnableTlsVerification" xml:space="preserve">
    <value>Enable TLS verification</value>
  </data>
  <data name="TopMenuOptions/Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="TopMenuOptions/Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="TopMenuTheme/AmazonianNight" xml:space="preserve">
    <value>Amazonian night</value>
  </data>
  <data name="TopMenuTheme/Dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="TopMenuTheme/Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="TopMenuTheme/Pampa" xml:space="preserve">
    <value>Pampa</value>
  </data>
  <data name="TopMenuHelp/ViewKeyboardShortcuts" xml:space="preserve">
    <value>View keyboard shortcuts</value>
  </data>
  <data name="TopMenuHelp/OpenDocsWebsite" xml:space="preserve">
    <value>Go to docs</value>
  </data>
  <data name="TopMenuHelp/RunUITests" xml:space="preserve">
    <value>Run UI tests (Ctrl+F12)</value>
  </data>
  <data name="UpdateReminder/DialogCancel" xml:space="preserve">
    <value>I'll check later</value>
  </data>
  <data name="UpdateReminder/DialogGoToSite" xml:space="preserve">
    <value>Go to site</value>
  </data>
  <data name="UpdateReminder/DialogMessage" xml:space="preserve">
    <value>Remember to periodically check for updates!</value>
  </data>
  <data name="UpdateReminder/DialogTitle" xml:space="preserve">
    <value>Pororoca</value>
  </data>
  <data name="WebSocketClientMessage/ContentFileSearchFile" xml:space="preserve">
    <value>Search file…</value>
  </data>
  <data name="WebSocketClientMessage/ContentFileSrcPathWatermark" xml:space="preserve">
    <value>(file path here)</value>
  </data>
  <data name="WebSocketClientMessage/ContentModeFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="WebSocketClientMessage/ContentModeRaw" xml:space="preserve">
    <value>Raw</value>
  </data>
  <data name="WebSocketClientMessage/ContentRawWatermark" xml:space="preserve">
    <value>(raw content here)</value>
  </data>
  <data name="WebSocketClientMessage/DisableCompressionExplanation" xml:space="preserve">
    <value>Be careful when using compression with encrypted data - look out for CRIME / BREACH attacks.</value>
  </data>
  <data name="WebSocketClientMessage/DisableCompressionForThisMessage" xml:space="preserve">
    <value>Disable compression for this message</value>
  </data>
  <data name="WebSocketClientMessage/MessageTypeBinary" xml:space="preserve">
    <value>Binary</value>
  </data>
  <data name="WebSocketClientMessage/MessageTypeClose" xml:space="preserve">
    <value>Closing message</value>
  </data>
  <data name="WebSocketClientMessage/MessageTypeText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="WebSocketClientMessage/NewMessage" xml:space="preserve">
    <value>New client message</value>
  </data>
  <data name="WebSocketClientMessage/RawContentJsonSyntax" xml:space="preserve">
    <value>JSON</value>
  </data>
  <data name="WebSocketClientMessage/RawContentOtherSyntax" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="WebSocketConnection/CancelConnect" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="WebSocketConnection/CancelConnectToolTip" xml:space="preserve">
    <value>Cancel (F6)</value>
  </data>
  <data name="WebSocketConnection/CancelDisconnect" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="WebSocketConnection/CompressionClientContextTakeover" xml:space="preserve">
    <value>Client context takeover</value>
  </data>
  <data name="WebSocketConnection/CompressionClientMaxWindowBits" xml:space="preserve">
    <value>Client max window bits</value>
  </data>
  <data name="WebSocketConnection/CompressionServerContextTakeover" xml:space="preserve">
    <value>Server context takeover</value>
  </data>
  <data name="WebSocketConnection/CompressionServerMaxWindowBits" xml:space="preserve">
    <value>Server max window bits</value>
  </data>
  <data name="WebSocketConnection/Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="WebSocketConnection/ConnectToolTip" xml:space="preserve">
    <value>Connect (F5)</value>
  </data>
  <data name="WebSocketConnection/Connected" xml:space="preserve">
    <value>CONNECTED</value>
  </data>
  <data name="WebSocketConnection/ConnectionResponse" xml:space="preserve">
    <value>Response</value>
  </data>
  <data name="WebSocketConnection/ConnectionExceptionWatermark" xml:space="preserve">
    <value>(connection exception here, if it happens)</value>
  </data>
  <data name="WebSocketConnection/ConnectionRequestHeaderAdd" xml:space="preserve">
    <value>Add header</value>
  </data>
  <data name="WebSocketConnection/ConnectionRequestOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="WebSocketConnection/ConnectionRequestSubprotocolAdd" xml:space="preserve">
    <value>Add subprotocol</value>
  </data>
  <data name="WebSocketConnection/ConnectionRequestSubprotocolEnabled" xml:space="preserve">
    <value>ENABLED</value>
  </data>
  <data name="WebSocketConnection/ConnectionRequestSubprotocolName" xml:space="preserve">
    <value>NAME</value>
  </data>
  <data name="WebSocketConnection/CustomAuth" xml:space="preserve">
    <value>Auth</value>
  </data>
  <data name="WebSocketConnection/Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="WebSocketConnection/DisconnectToolTip" xml:space="preserve">
    <value>Disconnect (F6)</value>
  </data>
  <data name="WebSocketConnection/EnableCompression" xml:space="preserve">
    <value>Enable compression</value>
  </data>
  <data name="WebSocketConnection/NewConnection" xml:space="preserve">
    <value>New WebSocket connection</value>
  </data>
  <data name="WebSocketConnection/OptionCompression" xml:space="preserve">
    <value>Compression</value>
  </data>
  <data name="WebSocketConnection/OptionHeaders" xml:space="preserve">
    <value>Headers</value>
  </data>
  <data name="WebSocketConnection/OptionSubprotocols" xml:space="preserve">
    <value>Subprotocols</value>
  </data>
  <data name="WebSocketConnection/SectionTitle" xml:space="preserve">
    <value>Connection</value>
  </data>
  <data name="WebSocketConnection/UrlWatermark" xml:space="preserve">
    <value>(websocket url here)</value>
  </data>
  <data name="WebSocketExchangedMessageDetail/ContentWatermark" xml:space="preserve">
    <value>(message content)</value>
  </data>
  <data name="WebSocketExchangedMessageDetail/MessageTypeWatermark" xml:space="preserve">
    <value>(message type)</value>
  </data>
  <data name="WebSocketExchangedMessageDetail/SaveToFile" xml:space="preserve">
    <value>Save as…</value>
  </data>
  <data name="WebSocketExchangedMessageDetail/SaveToFileToolTip" xml:space="preserve">
    <value>Save as… (F9)</value>
  </data>
  <data name="WebSocketExchangedMessageDetail/SectionTitle" xml:space="preserve">
    <value>Message detail</value>
  </data>
  <data name="WebSocketExchangedMessages/BinaryContentDescriptionFormat" xml:space="preserve">
    <value>binary, {0} bytes</value>
  </data>
  <data name="WebSocketExchangedMessages/ClosingMessageContentDescriptionFormat" xml:space="preserve">
    <value>closing, {0} bytes</value>
  </data>
  <data name="WebSocketExchangedMessages/FromClientToServer" xml:space="preserve">
    <value>client -&gt; server</value>
  </data>
  <data name="WebSocketExchangedMessages/FromServerToClient" xml:space="preserve">
    <value>server -&gt; client</value>
  </data>
  <data name="WebSocketExchangedMessages/SectionTitle" xml:space="preserve">
    <value>Messages exchanged</value>
  </data>
  <data name="WebSocketExchangedMessages/SendMessage" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="WebSocketExchangedMessages/TextContentDescriptionFormat" xml:space="preserve">
    <value>text, {0} bytes</value>
  </data>  
</root>