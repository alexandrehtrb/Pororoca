<Window
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="using:Pororoca.Desktop.ViewModels"
    xmlns:v="using:Pororoca.Desktop.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignWidth="800"
    d:DesignHeight="450"
    x:Class="Pororoca.Desktop.Views.MainWindow"
    x:CompileBindings="True"
    x:DataType="vm:MainWindowViewModel"
    FontFamily="{StaticResource DefaultFontFamily}"
    Icon="/Assets/pororoca_icon.ico"
    Title="Pororoca"
    Name="mainWindow">

  <Design.DataContext>
    <vm:MainWindowViewModel/>
  </Design.DataContext>

  <Window.KeyBindings>
    <!-- Keyboard shortcuts are defined in CollectionsGroupView and MainWindow -->
    <KeyBinding Command="{Binding HotKeys.ShowHelpCmd, Mode=OneWay}" Gesture="F1"/>
    <KeyBinding Command="{Binding HotKeys.RenameCmd, Mode=OneWay}" Gesture="F2"/>
    <KeyBinding Command="{Binding HotKeys.FocusOnUrlCmd, Mode=OneWay}" Gesture="F4"/>
    <KeyBinding Command="{Binding HotKeys.SendRequestOrConnectWebSocketCmd, Mode=OneWay}" Gesture="F5"/>
    <KeyBinding Command="{Binding HotKeys.CancelRequestOrDisconnectWebSocketCmd, Mode=OneWay}" Gesture="F6"/>
    <KeyBinding Command="{Binding HotKeys.CyclePreviousEnvironmentToActiveCmd, Mode=OneWay}" Gesture="F7"/>
    <KeyBinding Command="{Binding HotKeys.CycleNextEnvironmentToActiveCmd, Mode=OneWay}" Gesture="F8"/>
    <KeyBinding Command="{Binding HotKeys.SaveResponseToFileCmd, Mode=OneWay}" Gesture="F9"/>
    <KeyBinding Command="{Binding HotKeys.ExportHttpLogToFileCmd, Mode=OneWay}" Gesture="F10"/>
    <KeyBinding Command="{Binding HotKeys.MoveUpCmd, Mode=OneWay}" Gesture="Alt+Up"/>
    <KeyBinding Command="{Binding HotKeys.MoveDownCmd, Mode=OneWay}" Gesture="Alt+Down"/>
    <KeyBinding Command="{Binding HotKeys.SwitchToPreviousItemCmd, Mode=OneWay}" Gesture="Ctrl+PageUp"/>
    <KeyBinding Command="{Binding HotKeys.SwitchToNextItemCmd, Mode=OneWay}" Gesture="Ctrl+PageDown"/>
    <KeyBinding Command="{Binding RunUITestsCmd, Mode=OneWay}" Gesture="Ctrl+F12"/>
    <KeyBinding Command="{Binding SaveAllCmd, Mode=OneWay}" Gesture="Ctrl+Shift+S"/>
  </Window.KeyBindings>

  <Panel>
    <DockPanel
        HorizontalAlignment="Stretch"
        Background="{DynamicResource MainWindowMenuBrush}">
      <Menu
          x:Name="topMenu"
          DockPanel.Dock="Top">
        <Menu.ItemsPanel>
          <ItemsPanelTemplate>
            <DockPanel HorizontalAlignment="Stretch"/>
          </ItemsPanelTemplate>
        </Menu.ItemsPanel>
        <MenuItem
            x:Name="topMenuItemFile"
            Header="{Binding i18n.TopMenu.File, Mode=OneWay}">
          <MenuItem
              x:Name="topMenuItemFileNewCollection"
              Header="{Binding i18n.TopMenuFile.NewCollection, Mode=OneWay}"
              Command="{Binding AddNewCollectionCmd, Mode=OneWay}"/>
          <Separator/>
          <MenuItem
              x:Name="topMenuItemFileImportCollectionsFromFile"
              Header="{Binding i18n.TopMenuFile.ImportFromFile, Mode=OneWay}"
              Command="{Binding ImportCollectionsFromFileCmd, Mode=OneWay}"/>
          <Separator/>
          <MenuItem
              Header="{Binding i18n.TopMenuFile.SaveAll, Mode=OneWay}"
              InputGesture="Ctrl+Shift+S"
              Command="{Binding SaveAllCmd, Mode=OneWay}"/>
          <Separator/>
          <MenuItem
              x:Name="topMenuItemFileExit"
              Header="{Binding i18n.TopMenuFile.Exit, Mode=OneWay}"
              InputGesture="Alt+F4"
              Click="OnCloseMainWindow"/>
        </MenuItem>
        <MenuItem
            x:Name="topMenuItemOptions"
            Header="{Binding i18n.TopMenu.Options, Mode=OneWay}">
          <MenuItem
              x:Name="topMenuItemOptionsTheme"
              Header="{Binding i18n.TopMenuOptions.Theme, Mode=OneWay}">
            <MenuItem
                x:Name="topMenuItemOptionsThemeLight"
                Header="{Binding i18n.TopMenuTheme.Light, Mode=OneWay}"
                Command="{Binding SwitchToLightThemeCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsThemeLight, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsThemeLight2"
                Header="{Binding i18n.TopMenuTheme.Light2, Mode=OneWay}"
                Command="{Binding SwitchToLight2ThemeCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsThemeLight2, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsThemeDark"
                Header="{Binding i18n.TopMenuTheme.Dark, Mode=OneWay}"
                Command="{Binding SwitchToDarkThemeCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsThemeDark, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsThemePampa"
                Header="{Binding i18n.TopMenuTheme.Pampa, Mode=OneWay}"
                Command="{Binding SwitchToPampaThemeCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsThemePampa, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsThemeAmazonianNight"
                Header="{Binding i18n.TopMenuTheme.AmazonianNight, Mode=OneWay}"
                Command="{Binding SwitchToAmazonianNightThemeCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsThemeAmazonianNight, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
          </MenuItem>
          <MenuItem
              x:Name="topMenuItemOptionsLanguage"
              Header="{Binding i18n.TopMenuOptions.Language, Mode=OneWay}">
            <MenuItem
                x:Name="topMenuItemOptionsLanguagePortuguês"
                Header="{Binding i18n.TopMenuLanguage.Português, Mode=OneWay}"
                Command="{Binding SelectLanguagePortuguesCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguagePortuguese, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsLanguageEnglish"
                Header="{Binding i18n.TopMenuLanguage.English, Mode=OneWay}"
                Command="{Binding SelectLanguageEnglishCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguageEnglish, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsLanguageRussian"
                Header="{Binding i18n.TopMenuLanguage.Russian, Mode=OneWay}"
                Command="{Binding SelectLanguageRussianCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguageRussian, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsLanguageItalian"
                Header="{Binding i18n.TopMenuLanguage.Italian, Mode=OneWay}"
                Command="{Binding SelectLanguageItalianCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguageItalian, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsLanguageSimplifiedChinese"
                Header="{Binding i18n.TopMenuLanguage.SimplifiedChinese, Mode=OneWay}"
                Command="{Binding SelectLanguageSimplifiedChineseCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguageSimplifiedChinese, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsLanguageGerman"
                Header="{Binding i18n.TopMenuLanguage.German, Mode=OneWay}"
                Command="{Binding SelectLanguageGermanCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguageGerman, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsLanguageSpanish"
                Header="{Binding i18n.TopMenuLanguage.Spanish, Mode=OneWay}"
                Command="{Binding SelectLanguageSpanishCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguageSpanish, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="topMenuItemOptionsLanguagePolish"
                Header="{Binding i18n.TopMenuLanguage.Polish, Mode=OneWay}"
                Command="{Binding SelectLanguagePolishCmd, Mode=OneWay}">
              <MenuItem.Icon>
                <Image
                    IsVisible="{Binding IsLanguagePolish, Mode=OneWay}"
                    Classes="MenuItemCheckMark">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconCheck}"/>
                  </Image.Source>
                </Image>
              </MenuItem.Icon>
            </MenuItem>
          </MenuItem>
          <MenuItem
              x:Name="topMenuItemOptionsEnableTlsVerification"
              Header="{Binding i18n.TopMenuOptions.EnableTlsVerification, Mode=OneWay}"
              Command="{Binding ToggleSSLVerificationCmd, Mode=OneWay}">
            <MenuItem.Icon>
              <Image
                  IsVisible="{Binding !IsSslVerificationDisabled, Mode=OneWay}"
                  Classes="MenuItemCheckMark">
                <Image.Source>
                  <DrawingImage Drawing="{StaticResource IconCheck}"/>
                </Image.Source>
              </Image>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem
            x:Name="topMenuItemOptionsAutoCheckForUpdates"
            Header="{Binding i18n.TopMenuOptions.AutoCheckForUpdates, Mode=OneWay}"
            Command="{Binding ToggleAutoCheckForUpdatesCmd, Mode=OneWay}">
            <MenuItem.Icon>
              <Image
                IsVisible="{Binding AutoCheckForUpdatesEnabled, Mode=OneWay}"
                Classes="MenuItemCheckMark">
                <Image.Source>
                  <DrawingImage Drawing="{StaticResource IconCheck}"/>
                </Image.Source>
              </Image>
            </MenuItem.Icon>
          </MenuItem>
        </MenuItem>
        <MenuItem
            x:Name="topMenuItemHelp"
            Header="{Binding i18n.TopMenu.Help, Mode=OneWay}">
          <MenuItem
            Header="{Binding i18n.TopMenuHelp.ViewKeyboardShortcuts, Mode=OneWay}"
            Command="{Binding HotKeys.ShowHelpCmd, Mode=OneWay}"/>
          <MenuItem
            Header="{Binding i18n.TopMenuHelp.OpenDocsWebsite, Mode=OneWay}"
            Command="{Binding OpenDocsInWebBrowserCmd, Mode=OneWay}"/>
          <MenuItem
            Header="{Binding i18n.TopMenuHelp.MakeADonation, Mode=OneWay}"
            Command="{Binding OpenDonationsPageInWebBrowserCmd, Mode=OneWay}"/>
          <Separator/>
          <MenuItem
            Header="{Binding VersionName}"
            IsEnabled="False"/>
          <MenuItem
            Header="{Binding i18n.TopMenuHelp.RunUITests, Mode=OneWay}"
            IsVisible="{Binding IsRunUITestsVisible, Mode=OneWay}"
            Command="{Binding RunUITestsCmd, Mode=OneWay}"/>
        </MenuItem>
        <MenuItem
            Header="{Binding i18n.TopMenu.Saved, Mode=OneWay}"
            HorizontalAlignment="Right"
            IsVisible="{Binding IsSavedLabelVisible, Mode=OneWay}"/>
        <!--MenuItem
        Header="{Binding i18n.TopMenu.Contribute, Mode=OneWay}"/-->
      </Menu>

      <Grid>
        <Grid.ColumnDefinitions>
          <!-- Width="Auto" MinWidth="240" causes the left panel
           to expand after renaming an item to a big text -->
          <ColumnDefinition Width="240" MinWidth="240"/>
          <ColumnDefinition Width="2" />
          <ColumnDefinition Width="1*" MinWidth="24"/>
        </Grid.ColumnDefinitions>

        <v:CollectionsGroupView
            x:Name="mainWindowCollectionsGroup"
            Grid.Column="0"
            Background="{DynamicResource MainWindowSidebarBrush}"
            DataContext="{Binding CollectionsGroupViewDataCtx, Mode=OneWay}"/>

        <GridSplitter
            Grid.Column="1"
            Background="{DynamicResource MainWindowSidebarBrush}"
            ResizeDirection="Columns"/>

        <Panel
          x:Name="mainWindowPanel"
          Grid.Column="2"
          IsHitTestVisible="True"
          Background="{DynamicResource MainWindowBackgroundBrush}">
          <Grid
              VerticalAlignment="Stretch"
              HorizontalAlignment="Stretch">
            <v:WelcomeView
                x:Name="welcomeView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).WelcomeView.Visible, Mode=OneWay}"
                DataContext="{Binding WelcomeView.VM, Mode=OneWay}"/>
            <v:CollectionView
                x:Name="collectionView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).CollectionView.Visible, Mode=OneWay}"
                DataContext="{Binding CollectionView.VM, Mode=OneWay}"/>
            <v:ExportCollectionView
                x:Name="exportCollectionView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).ExportCollectionView.Visible, Mode=OneWay}"
                DataContext="{Binding ExportCollectionView.VM, Mode=OneWay}"/>
            <v:CollectionVariablesView
                x:Name="collectionVariablesView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).CollectionVariablesView.Visible, Mode=OneWay}"
                DataContext="{Binding CollectionVariablesView.VM, Mode=OneWay}"/>
            <v:CollectionScopedAuthView
                x:Name="collectionScopedAuthView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).CollectionScopedAuthView.Visible, Mode=OneWay}"
                DataContext="{Binding CollectionScopedAuthView.VM, Mode=OneWay}"/>
            <v:CollectionScopedRequestHeadersView
                x:Name="collectionScopedReqHeadersView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).CollectionScopedRequestHeadersView.Visible, Mode=OneWay}"
                DataContext="{Binding CollectionScopedRequestHeadersView.VM, Mode=OneWay}"/>
            <v:EnvironmentView
                x:Name="environmentView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).EnvironmentView.Visible, Mode=OneWay}"
                DataContext="{Binding EnvironmentView.VM, Mode=OneWay}"/>
            <v:ExportEnvironmentView
                x:Name="exportEnvironmentView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).ExportEnvironmentView.Visible, Mode=OneWay}"
                DataContext="{Binding ExportEnvironmentView.VM, Mode=OneWay}"/>
            <v:CollectionFolderView
                x:Name="collectionFolderView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).CollectionFolderView.Visible, Mode=OneWay}"
                DataContext="{Binding CollectionFolderView.VM, Mode=OneWay}"/>
            <v:HttpRequestView
                x:Name="httpReqView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).HttpRequestView.Visible, Mode=OneWay}"
                DataContext="{Binding HttpRequestView.VM, Mode=OneWay}"/>
            <v:WebSocketConnectionView
                x:Name="wsConnView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).WebSocketConnectionView.Visible, Mode=OneWay}"
                DataContext="{Binding WebSocketConnectionView.VM, Mode=OneWay}"/>
            <v:WebSocketClientMessageView
                x:Name="wsClientMsgView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).WebSocketClientMessageView.Visible, Mode=OneWay}"
                DataContext="{Binding WebSocketClientMessageView.VM, Mode=OneWay}"/>
            <v:HttpRepeaterView
                x:Name="httpRepView"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                IsVisible="{Binding #mainWindow.((vm:MainWindowViewModel)DataContext).HttpRepeaterView.Visible, Mode=OneWay}"
                DataContext="{Binding HttpRepeaterView.VM, Mode=OneWay}"/>
          </Grid>
        </Panel>
      </Grid>

    </DockPanel>
  </Panel>
</Window>