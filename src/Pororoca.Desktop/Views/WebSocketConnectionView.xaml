<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:v="using:Pororoca.Desktop.Views"
    xmlns:vm="clr-namespace:Pororoca.Desktop.ViewModels;assembly=Pororoca.Desktop"
    xmlns:controls="clr-namespace:Pororoca.Desktop.Controls;assembly=Pororoca.Desktop"
    xmlns:conv="clr-namespace:Pororoca.Desktop.Converters;assembly=Pororoca.Desktop"
    xmlns:AvaloniaEdit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
    x:Class="Pororoca.Desktop.Views.WebSocketConnectionView"
    x:CompileBindings="True"
    x:DataType="vm:WebSocketConnectionViewModel"
    mc:Ignorable="d"
    d:DesignWidth="1350"
    d:DesignHeight="700"
    FontSize="14">

  <UserControl.Resources>
    <conv:WebSocketConnectionOptionMatchConverter x:Key="connectionOptionMatch"/>
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector="TabItem">
      <Setter
          Property="FontSize"
          Value="20"/>
    </Style>
  </UserControl.Styles>

  <Grid
      HorizontalAlignment="Stretch"
      VerticalAlignment="Stretch"
      RowDefinitions="Auto,*">

    <StackPanel
        Grid.Column="0"
        Grid.Row="0"
        Margin="0,24,0,0"
        Orientation="Vertical"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">

      <controls:EditableTextBlock
          x:Name="etbName"
          Margin="24,0,24,0"
          HorizontalAlignment="Stretch"
          DataContext="{Binding NameEditableVm, Mode=OneWay}"/>

      <Grid
          ShowGridLines="False"
          Height="40"
          Margin="24,40,24,16"
          ColumnDefinitions="*, Auto, Auto">

        <StackPanel
            Grid.Column="0"
            Grid.Row="0"
            Margin="0,0,6,0"
            Orientation="Vertical"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">

          <TextBox
              x:Name="tbUrl"
              Height="40"
              Text="{Binding Url}"
              Watermark="{Binding i18n.WebSocketConnection.UrlWatermark, Mode=OneWay}"
              VerticalContentAlignment="Center"
              ToolTip.Tip="{Binding ResolvedUrlToolTip}"
              Classes="SingleLine"
              PointerEntered="OnUrlPointerEnter"
              Classes.HasValidationProblem="{Binding HasUrlValidationProblem}"/>

          <TextBlock
              Name="tbErrorMsg"
              Margin="12,6,12,0"
              Classes="ErrorMessage"
              Text="{Binding InvalidConnectionError}"
              IsVisible="{Binding IsInvalidConnectionErrorVisible, Mode=OneWay}"/>

          <TextBlock
              Name="tbIsWsConnected"
              Margin="12,6,12,0"
              FontSize="14"
              Foreground="{DynamicResource WebSocketConnectedBrush}"
              Text="{Binding i18n.WebSocketConnection.Connected, Mode=OneWay}"
              IsVisible="{Binding IsConnected, Mode=OneWay}"/>

        </StackPanel>

        <ComboBox
            Name="cbHttpVersion"
            Grid.Column="1"
            Grid.Row="0"
            Width="120"
            Height="40"
            Margin="6,0,12,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            SelectedIndex="{Binding HttpVersionSelectedIndex, Mode=TwoWay}"
            ItemsSource="{Binding HttpVersionSelectionOptions}"
            Classes.HasValidationProblem="{Binding HasHttpVersionValidationProblem}"/>

        <Button
            Name="btConnectDisconnectCancel"
            Grid.Column="2"
            Grid.Row="0"
            Height="40"
            Width="104"
            Margin="12,0,0,0"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Click="ConnectDisconnectCancel"
            Content="{Binding ConnectDisconnectCancelButtonText}"
            ToolTip.Tip="{Binding ConnectDisconnectCancelButtonToolTip}"
            Classes.Primary="{Binding !IsConnected}"
            Classes.PrimaryInverted="{Binding IsConnected}"/>

      </Grid>

      <!-- The grid below is necessary to preserve a spacing for the progress bar when it is not visible -->
      <Grid
          Margin="0,0,0,16"
          Height="4"
          HorizontalAlignment="Stretch">
        <!-- CONNECTION RESPONSE PROGRESS BAR -->
        <ProgressBar
            IsIndeterminate="True"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch"
            IsVisible="{Binding IsConnectingOrDisconnecting, Mode=OneWay}"/>
      </Grid>

      <Separator
          Margin="-12,0,-12,0"
          Classes="Separator"
          Height="6"/>
    </StackPanel>

    <Grid
        Grid.Column="0"
        Grid.Row="1"
        Margin="12,0,12,0"
        VerticalAlignment="Stretch"
        ColumnDefinitions="* , Auto , * , Auto , *">

      <!-- CONNECTION REQUEST AND RESPONSE -->
      <Grid
          Grid.Column="0"
          Grid.Row="0"
          RowDefinitions="Auto, *">

        <TextBlock
            Grid.Column="0"
            Grid.Row="0"
            Margin="12,28,12,0"
            Classes="SectionTitle"
            Text="{Binding i18n.WebSocketConnection.SectionTitle, Mode=OneWay}"/>
        <TabControl
            Name="tabControlConnectionRequest"
            Grid.Column="0"
            Grid.Row="1"
            Margin="12,24,12,12"
            TabStripPlacement="Top"
            SelectedIndex="{Binding SelectedConnectionTabIndex}">
          <!-- CONNECTION OPTIONS -->
          <TabItem Name="tabItemConnectionRequestOptions">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.WebSocketConnection.ConnectionRequestOptions, Mode=OneWay}"/>
            </TabItem.Header>

            <Grid Margin="0,12,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>

              <ComboBox
                  x:Name="cbWsScrReqOptions"
                  Grid.Column="0"
                  Grid.Row="0"
                  Height="36"
                  Width="190"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Stretch"
                  SelectedIndex="{Binding ConnectionOptionSelectedIndex, Mode=TwoWay}">
                <ComboBoxItem
                    x:Name="cbiWsScrReqOptionHeaders"
                    Content="{Binding i18n.WebSocketConnection.OptionHeaders, Mode=OneWay}"/>
                <ComboBoxItem
                    x:Name="cbiWsScrReqOptionSubprotocols"
                    Content="{Binding i18n.WebSocketConnection.OptionSubprotocols, Mode=OneWay}"/>
                <ComboBoxItem
                    x:Name="cbiWsScrReqOptionCompression"
                    Content="{Binding i18n.WebSocketConnection.OptionCompression, Mode=OneWay}"/>
              </ComboBox>
              <!-- CONNECTION REQUEST HEADERS -->
              <Grid
                  x:Name="grWsConnReqHeaders"
                  Grid.Column="0"
                  Grid.Row="1"
                  Margin="-12,12,-12,12"
                  IsVisible="{Binding ConnectionOptionSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource connectionOptionMatch},
                              ConverterParameter=Headers}"
                  RowDefinitions="Auto,*">
                <Button
                    Name="btAddConnectionRequestHeader"
                    Grid.Column="0"
                    Grid.Row="0"
                    Height="24"
                    Width="24"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Padding="2"
                    Margin="12,0,0,0"
                    Classes="Secondary"
                    ToolTip.Tip="{Binding i18n.WebSocketConnection.ConnectionRequestHeaderAdd, Mode=OneWay}"
                    Command="{Binding RequestHeadersTableVm.AddNewCmd, Mode=OneWay}">
                  <Button.Content>
                    <Image
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Width="12"
                        Height="12">
                      <Image.Source>
                        <DrawingImage Drawing="{StaticResource IconAdd}"/>
                      </Image.Source>
                    </Image>
                  </Button.Content>
                </Button>
                <controls:RequestHeadersTableView
                    x:Name="rhtvWsConnectionReqHeaders"
                    Grid.Column="0"
                    Grid.Row="1"
                    Margin="0,12,0,0"
                    DataContext="{Binding RequestHeadersTableVm, Mode=OneWay}"/>
              </Grid>
              <!-- CONNECTION REQUEST SUBPROTOCOLS -->
              <Grid
                  x:Name="grWsConnReqSubprotocols"
                  Grid.Column="0"
                  Grid.Row="1"
                  Margin="-12,12,-12,12"
                  IsVisible="{Binding ConnectionOptionSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource connectionOptionMatch},
                              ConverterParameter=Subprotocols}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Button
                    Name="btAddSubprotocol"
                    Grid.Column="0"
                    Grid.Row="0"
                    Height="24"
                    Width="24"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Padding="2"
                    Margin="12,0,0,0"
                    Classes="Secondary"
                    ToolTip.Tip="{Binding i18n.WebSocketConnection.ConnectionRequestSubprotocolAdd, Mode=OneWay}"
                    Command="{Binding SubprotocolsTableVm.AddNewCmd, Mode=OneWay}">
                  <Button.Content>
                    <Image
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Width="12"
                        Height="12">
                      <Image.Source>
                        <DrawingImage Drawing="{StaticResource IconAdd}"/>
                      </Image.Source>
                    </Image>
                  </Button.Content>
                </Button>
                <DataGrid
                    Name="dbSubprotocols"
                    Grid.Column="0"
                    Grid.Row="1"
                    Margin="0,12,0,0"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    ItemsSource="{Binding SubprotocolsTableVm.Items}"
                    SelectionChanged="OnSelectedSubprotocolsChanged"
                    CanUserResizeColumns="True"
                    HeadersVisibility="All"
                    Classes="DragAndDrop SubprotocolsDragAndDrop">
                  <!--DataGrid.KeyBindings>
                      <KeyBinding Command="{Binding SubprotocolsTableVm.CutCmd, Mode=OneWay}" Gesture="Ctrl+X" />
                      <KeyBinding Command="{Binding SubprotocolsTableVm.CopyCmd, Mode=OneWay}" Gesture="Ctrl+C" />
                      <KeyBinding Command="{Binding SubprotocolsTableVm.PasteCmd, Mode=OneWay}" Gesture="Ctrl+V" />
                      <KeyBinding Command="{Binding SubprotocolsTableVm.DuplicateCmd, Mode=OneWay}" Gesture="Ctrl+D" />
                      <KeyBinding Command="{Binding SubprotocolsTableVm.DeleteCmd, Mode=OneWay}" Gesture="Delete" />
                    </DataGrid.KeyBindings-->
                  <DataGrid.ContextMenu>
                    <ContextMenu>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Cut, Mode=OneWay}"
                          Command="{Binding SubprotocolsTableVm.CutCmd, Mode=OneWay}"
                          InputGesture="Ctrl+X"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Copy, Mode=OneWay}"
                          Command="{Binding SubprotocolsTableVm.CopyCmd, Mode=OneWay}"
                          InputGesture="Ctrl+C"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Paste, Mode=OneWay}"
                          Command="{Binding SubprotocolsTableVm.PasteCmd, Mode=OneWay}"
                          InputGesture="Ctrl+V"
                          IsEnabled="{Binding SubprotocolsTableVm.InnerClipboardArea.CanPaste}"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Delete, Mode=OneWay}"
                          Command="{Binding SubprotocolsTableVm.DeleteCmd, Mode=OneWay}"
                          InputGesture="Delete"/>
                    </ContextMenu>
                  </DataGrid.ContextMenu>
                  <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        Width="0.34*"
                        Binding="{Binding Enabled}">
                      <DataGridCheckBoxColumn.Header>
                        <TextBlock Text="{Binding i18n.WebSocketConnection.ConnectionRequestSubprotocolEnabled, Mode=OneWay}"/>
                      </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn
                        Width="0.66*"
                        Binding="{Binding Key}">
                      <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding i18n.WebSocketConnection.ConnectionRequestSubprotocolName, Mode=OneWay}"/>
                      </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn
                        Width="0.2*"
                        Header="">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <Button
                              Command="{Binding RemoveParamCmd, Mode=OneWay}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              Classes="Trash">
                          </Button>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Grid>
              <!-- CONNECTION COMPRESSION -->
              <StackPanel
                  x:Name="spWsConnReqCompression"
                  Grid.Column="0"
                  Grid.Row="1"
                  Margin="0,12,0,12"
                  IsVisible="{Binding ConnectionOptionSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource connectionOptionMatch},
                              ConverterParameter=Compression}">
                <CheckBox
                    x:Name="cbWsConnReqCompressionEnable"
                    Content="{Binding i18n.WebSocketConnection.EnableCompression, Mode=OneWay}"
                    IsChecked="{Binding EnableCompression}"/>

                <StackPanel
                    x:Name="spWsConnReqCompressionOptions"
                    IsVisible="{Binding EnableCompression, Mode=OneWay}">
                  <CheckBox
                      Margin="0,12,0,0"
                      Content="{Binding i18n.WebSocketConnection.CompressionClientContextTakeover, Mode=OneWay}"
                      IsChecked="{Binding CompressionClientContextTakeoverEnabled}"/>

                  <StackPanel
                      Orientation="Horizontal"
                      Margin="0,12,0,0">
                    <TextBlock
                        TextWrapping="Wrap"
                        FontSize="14"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Margin="0,0,6,0"
                        Text="{Binding i18n.WebSocketConnection.CompressionClientMaxWindowBits, Mode=OneWay}"/>
                    <NumericUpDown
                        Margin="6,0,0,0"
                        VerticalAlignment="Center"
                        Increment="1"
                        Minimum="9"
                        Maximum="15"
                        Value="{Binding CompressionClientMaxWindowBits, Mode=TwoWay}"/>
                  </StackPanel>

                  <CheckBox
                      Margin="0,12,0,0"
                      Content="{Binding i18n.WebSocketConnection.CompressionServerContextTakeover, Mode=OneWay}"
                      IsChecked="{Binding CompressionServerContextTakeoverEnabled}"/>

                  <StackPanel
                      Orientation="Horizontal"
                      Margin="0,12,0,0">
                    <TextBlock
                        TextWrapping="Wrap"
                        FontSize="14"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Margin="0,0,6,0"
                        Text="{Binding i18n.WebSocketConnection.CompressionServerMaxWindowBits, Mode=OneWay}"/>
                    <NumericUpDown
                        Margin="6,0,0,0"
                        VerticalAlignment="Center"
                        Increment="1"
                        Minimum="9"
                        Maximum="15"
                        Value="{Binding CompressionServerMaxWindowBits, Mode=TwoWay}"/>
                  </StackPanel>

                </StackPanel>
              </StackPanel>
            </Grid>
          </TabItem>
          <!-- CONNECTION REQUEST AUTH -->
          <TabItem Name="tabItemConnectionRequestAuth">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.WebSocketConnection.CustomAuth, Mode=OneWay}"/>
            </TabItem.Header>
            <v:RequestAuthView DataContext="{Binding RequestAuthDataCtx, Mode=OneWay}"/>
          </TabItem>
          <!-- CONNECTION RESPONSE -->
          <TabItem Name="tabItemConnectionResponse">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.WebSocketConnection.ConnectionResponse, Mode=OneWay}"/>
            </TabItem.Header>
            <Grid>
              <Grid
                  RowDefinitions="*, Auto"
                  IsVisible="{Binding !WasConnectionSuccessful, Mode=OneWay}">
                <!-- AcceptsReturn="True" allows for horizontal scrollbar -->
                <TextBox
                    Name="tbConnectionException"
                    Grid.Column="0"
                    Grid.Row="0"
                    Margin="0,12,0,12"
                    Watermark="{Binding i18n.WebSocketConnection.ConnectionExceptionWatermark, Mode=OneWay}"
                    TextWrapping="NoWrap"
                    IsReadOnly="True"
                    HorizontalAlignment="Stretch"
                    Classes="CodeTextBox"
                    Text="{Binding ConnectionExceptionContent}"/>
                <Button
                    Name="btDisableTlsVerification"
                    Grid.Column="0"
                    Grid.Row="1"
                    Content="{Binding i18n.HttpResponse.DisableTlsVerification, Mode=OneWay}"
                    Margin="0,0,0,12"
                    IsVisible="{Binding IsDisableTlsVerificationVisible, Mode=OneWay}"
                    Command="{Binding DisableTlsVerificationCmd, Mode=OneWay}"
                    Classes="Primary"/>
              </Grid>
              <Grid
                  RowDefinitions="Auto, *"
                  IsVisible="{Binding WasConnectionSuccessful, Mode=OneWay}">
                <TextBlock
                    Name="tbWebsocketResStatusCodeAndTime"
                    Grid.Column="0"
                    Grid.Row="0"
                    Margin="12,24,12,12"
                    FontSize="16"
                    FontWeight="Light"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    TextWrapping="Wrap"
                    Text="{Binding ResponseStatusCodeElapsedTimeTitle}"/>
                <controls:ResponseHeadersTableView
                    x:Name="rhtvWebsocketResHeaders"
                    Grid.Column="0"
                    Grid.Row="1"
                    Margin="-12,12,-12,12"
                    DataContext="{Binding ConnectionResponseHeadersTableVm, Mode=OneWay}"/>
              </Grid>
            </Grid>
          </TabItem>
        </TabControl>
      </Grid>
      <Rectangle
          Margin="12,0,12,0"
          Grid.Column="1"
          Grid.Row="0"
          Width="6"
          VerticalAlignment="Stretch"
          Classes="Separator"/>
      <!-- MESSAGES EXCHANGED -->
      <Grid
          Grid.Column="2"
          Grid.Row="0"
          RowDefinitions="Auto, * , Auto">

        <Grid
          Grid.Column="0"
          Grid.Row="0"
          ColumnDefinitions="* , Auto"
          Margin="12,28,12,0">

          <TextBlock
            Grid.Column="0"
            Grid.Row="0"
            Classes="SectionTitle"
            Text="{Binding i18n.WebSocketExchangedMessages.SectionTitle, Mode=OneWay}"/>

          <Button
            Grid.Column="1"
            Grid.Row="0"
            x:Name="btSaveAllMessages"
            Width="36"
            Margin="12,0,0,0"
            Command="{Binding SaveAllExchangedMessagesToFilesCmd, Mode=OneWay}"
            IsVisible="{Binding IsSaveAllExchangedMessagesToFilesVisible, Mode=OneWay}"
            ToolTip.Tip="{Binding i18n.WebSocketExchangedMessages.SaveAllToFiles, Mode=OneWay}"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            Classes="Secondary">
            <Panel>
              <Image
                Width="16"
                Height="16"
                VerticalAlignment="Center"
                HorizontalAlignment="Center">
                <Image.Source>
                  <DrawingImage Drawing="{StaticResource IconExport}"/>
                </Image.Source>
              </Image>
            </Panel>
          </Button>

        </Grid>

        <ListBox
            Name="ExchangedMessagesList"
            Grid.Column="0"
            Grid.Row="1"
            Margin="12,24,12,8"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ItemsSource="{Binding ExchangedMessages, Mode=TwoWay}"
            SelectedItem="{Binding SelectedExchangedMessage, Mode=TwoWay}">

          <ListBox.Styles>
            <!-- this needs to be HERE, not in ComponentsCustomStyling.xaml -->
            <Style Selector="ListBoxItem:selected /template/ ContentPresenter#PART_ContentPresenter">
              <Setter
                  Property="Background"
                  Value="{DynamicResource ResultsListBoxItemSelectedBackgroundBrush}"/>
            </Style>
          </ListBox.Styles>
          
          <ListBox.ItemTemplate>
            <DataTemplate>
              <StackPanel
                  Margin="0,2"
                  Orientation="Vertical"
                  MinHeight="40">
                <TextBlock
                    HorizontalAlignment="Left"
                    Text="{Binding OriginDescription}"
                    Classes.WebSocketMessageFromServerPrimary="{Binding IsFromServer}"
                    Classes.WebSocketMessageFromClientPrimary="{Binding IsFromClient}"
                    FontSize="14"
                    FontWeight="Regular"
                    TextAlignment="Left"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"/>
                <TextBlock
                    HorizontalAlignment="Left"
                    Margin="4,4,4,0"
                    MinWidth="160"
                    Text="{Binding MessageSizeDescription}"
                    Classes.WebSocketMessageFromServerSecondary="{Binding IsFromServer}"
                    Classes.WebSocketMessageFromClientSecondary="{Binding IsFromClient}"
                    FontFamily="{StaticResource CodeFontFamily}"
                    FontSize="12"
                    FontWeight="Light"
                    TextAlignment="Left"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"/>
                <TextBlock
                    HorizontalAlignment="Stretch"
                    Margin="4,4,4,2"
                    Text="{Binding InstantDescription}"
                    Classes.WebSocketMessageFromServerSecondary="{Binding IsFromServer}"
                    Classes.WebSocketMessageFromClientSecondary="{Binding IsFromClient}"
                    FontSize="12"
                    FontWeight="Light"
                    TextAlignment="Left"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"/>
              </StackPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>

        <StackPanel
            Grid.Column="0"
            Grid.Row="2"
            Margin="12,8,12,24"
            Orientation="Vertical">

          <Grid ColumnDefinitions="Auto, *, Auto">

            <Button
                x:Name="btAddWsCliMsg"
                Grid.Column="0"
                Grid.Row="0"
                Height="40"
                Width="40"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Padding="2"
                Margin="0,0,12,0"
                Classes="Secondary"
                ToolTip.Tip="{Binding i18n.WebSocketClientMessage.NewMessage, Mode=OneWay}"
                Command="{Binding AddNewWebSocketClientMessageCmd, Mode=OneWay}">
              <Button.Content>
                <Image
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Width="16"
                    Height="16">
                  <Image.Source>
                    <DrawingImage Drawing="{StaticResource IconAdd}"/>
                  </Image.Source>
                </Image>
              </Button.Content>
            </Button>

            <ComboBox
                Name="cbWsMsgToSend"
                Grid.Column="1"
                Grid.Row="0"
                Height="40"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding Items}"
                SelectedIndex="{Binding MessageToSendSelectedIndex, Mode=TwoWay}">
              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <TextBlock Text="{Binding Name}"/>
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>

            <Button
                Name="btSendMessage"
                Grid.Column="2"
                Grid.Row="0"
                Height="40"
                Width="72"
                Margin="12,0,0,0"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Command="{Binding SendMessageCmd, Mode=OneWay}"
                Content="{Binding i18n.WebSocketExchangedMessages.SendMessage, Mode=OneWay}"
                Classes="Primary"/>

          </Grid>

          <ProgressBar
              IsIndeterminate="True"
              Margin="0,12,0,0"
              HorizontalAlignment="Stretch"
              IsVisible="{Binding IsSendingAMessage, Mode=OneWay}"/>

          <TextBlock
              Name="tbMessageToSendError"
              Margin="12,6,12,0"
              Classes="ErrorMessage"
              Text="{Binding InvalidClientMessageError}"
              IsVisible="{Binding IsInvalidClientMessageErrorVisible, Mode=OneWay}"/>
        </StackPanel>
      </Grid>
      <Rectangle
          Margin="12,0,12,0"
          Grid.Column="3"
          Grid.Row="0"
          Width="6"
          VerticalAlignment="Stretch"
          Classes="Separator"/>
      <!-- MESSAGE DETAIL -->
      <Grid
          Grid.Column="4"
          Grid.Row="0"
          RowDefinitions="Auto, Auto, * , Auto">

        <TextBlock
            Grid.Column="0"
            Grid.Row="0"
            Margin="12,28,12,0"
            Classes="SectionTitle"
            Text="{Binding i18n.WebSocketExchangedMessageDetail.SectionTitle, Mode=OneWay}"/>

        <TextBox
            Name="tbMessageDetailType"
            Grid.Column="0"
            Grid.Row="1"
            Margin="12,24,12,6"
            Height="40"
            Text="{Binding SelectedExchangedMessageType}"
            Watermark="{Binding i18n.WebSocketExchangedMessageDetail.MessageTypeWatermark, Mode=OneWay}"
            Classes="SingleLine"
            VerticalContentAlignment="Center"/>

        <!-- AcceptsReturn="True" allows for horizontal scrollbar -->
        <AvaloniaEdit:TextEditor
            Name="SelectedExchangedMessageContentEditor"
            Grid.Column="0"
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Margin="12,6,12,24"
            IsReadOnly="True"
            Document="{Binding SelectedExchangedMessageContentTextDocument}"/>

        <Button
            Grid.Column="0"
            Grid.Row="3"
            Content="{Binding i18n.WebSocketExchangedMessageDetail.SaveToFile, Mode=OneWay}"
            ToolTip.Tip="{Binding i18n.WebSocketExchangedMessageDetail.SaveToFileToolTip, Mode=OneWay}"
            ToolTip.Placement="Top"
            Margin="12,0,12,24"
            IsVisible="{Binding IsSaveSelectedExchangedMessageToFileVisible, Mode=OneWay}"
            Command="{Binding SaveSelectedExchangedMessageToFileCmd, Mode=OneWay}"
            Classes="Secondary"/>
      </Grid>
    </Grid>
  </Grid>
</UserControl>