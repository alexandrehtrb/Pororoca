<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="clr-namespace:Pororoca.Desktop.ViewModels;assembly=Pororoca.Desktop"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:v="using:Pororoca.Desktop.Views"
    xmlns:controls="clr-namespace:Pororoca.Desktop.Controls;assembly=Pororoca.Desktop"
    xmlns:conv="clr-namespace:Pororoca.Desktop.Converters;assembly=Pororoca.Desktop"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:AvaloniaEdit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
    mc:Ignorable="d"
    d:DesignWidth="1350"
    d:DesignHeight="700"
    x:Class="Pororoca.Desktop.Views.HttpRequestView"
    x:CompileBindings="True"
    x:DataType="vm:HttpRequestViewModel"
    FontSize="14">

  <UserControl.Resources>
    <conv:HttpRequestBodyModeMatchConverter x:Key="reqBodyModeMatch"/>
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector="TabItem">
      <Setter
          Property="FontSize"
          Value="20"/>
    </Style>
  </UserControl.Styles>

  <Grid
      HorizontalAlignment="Stretch"
      VerticalAlignment="Stretch"
      RowDefinitions="Auto,*">

    <StackPanel
        Grid.Column="0"
        Grid.Row="0"
        Margin="0,24,0,0"
        Orientation="Vertical"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">

      <controls:EditableTextBlock
          x:Name="etbName"
          Margin="24,0,24,0"
          HorizontalAlignment="Stretch"
          DataContext="{Binding NameEditableVm}"/>

      <Grid
          ShowGridLines="False"
          Margin="24,40,24,0"
          Height="40"
          ColumnDefinitions="Auto, *, Auto, Auto">

        <ComboBox
            Name="cbHttpMethod"
            Grid.Column="0"
            Grid.Row="0"
            Width="120"
            Height="40"
            Margin="0,0,6,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Stretch"
            SelectedIndex="{Binding RequestMethodSelectedIndex, Mode=TwoWay}"
            ItemsSource="{Binding RequestMethodSelectionOptions}"/>

        <StackPanel
            Grid.Column="1"
            Grid.Row="0"
            Margin="6,0,6,0"
            Orientation="Vertical"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">

          <TextBox
              x:Name="tbUrl"
              Height="40"
              Text="{Binding RequestUrl}"
              Watermark="{Binding i18n.HttpRequest.UrlWatermark}"
              VerticalContentAlignment="Center"
              ToolTip.Tip="{Binding ResolvedRequestUrlToolTip}"
              Classes="SingleLine"
              Classes.HasValidationProblem="{Binding HasRequestUrlValidationProblem}"
              PointerEntered="OnRequestUrlPointerEnter"/>

          <TextBlock
              Name="tbErrorMsg"
              Margin="12,6,12,0"
              Classes="ErrorMessage"
              Text="{Binding InvalidRequestMessage}"
              IsVisible="{Binding IsInvalidRequestMessageVisible}"/>

        </StackPanel>

        <ComboBox
            Name="cbHttpVersion"
            Grid.Column="2"
            Grid.Row="0"
            Width="120"
            Height="40"
            Margin="6,0,12,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            SelectedIndex="{Binding RequestHttpVersionSelectedIndex, Mode=TwoWay}"
            ItemsSource="{Binding RequestHttpVersionSelectionOptions}"
            Classes.HasValidationProblem="{Binding HasRequestHttpVersionValidationProblem}"/>

        <!--
          needs Click instead of Command because ReactiveCommand blocks
          button while method is being executed
        -->
        <Button
            Name="btSendOrCancelRequest"
            Grid.Column="3"
            Grid.Row="0"
            Margin="12,0,0,0"
            Height="40"
            Width="104"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Click="SendOrCancelRequest"
            Content="{Binding SendOrCancelRequestButtonText}"
            ToolTip.Tip="{Binding SendOrCancelRequestButtonToolTip}"
            Classes.Primary="{Binding !IsRequesting}"
            Classes.PrimaryInverted="{Binding IsRequesting}"/>

      </Grid>

      <Separator
          Classes="Separator"
          Height="6"
          Margin="0,36,0,0"/>
    </StackPanel>

    <Grid
        Grid.Column="0"
        Grid.Row="1"
        Margin="12,0,12,0"
        VerticalAlignment="Stretch"
        ColumnDefinitions="*,2,*">

      <!-- REQUEST -->
      <Grid
          Grid.Column="0"
          Grid.Row="0"
          RowDefinitions="Auto,*">

        <TextBlock
            Grid.Column="0"
            Grid.Row="0"
            Margin="12,28,12,0"
            Classes="SectionTitle"
            Text="{Binding i18n.HttpRequest.SectionTitle}"/>
        <TabControl
            Name="tabControlReq"
            Grid.Column="0"
            Grid.Row="1"
            Margin="12,24,12,12"
            TabStripPlacement="Top"
            SelectedIndex="{Binding RequestTabsSelectedIndex}">
          <!-- REQUEST HEADERS -->
          <TabItem Name="tabItemReqHeaders">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.HttpRequest.Headers}"/>
            </TabItem.Header>
            <Grid Margin="-12,12,-12,12" RowDefinitions="Auto,*">
              <Button
                  Name="btReqHeaderAdd"
                  Grid.Column="0"
                  Grid.Row="0"
                  Height="24"
                  Width="24"
                  HorizontalContentAlignment="Center"
                  VerticalContentAlignment="Center"
                  Padding="2"
                  Margin="12,0,0,0"
                  Classes="Secondary"
                  ToolTip.Tip="{Binding i18n.HttpRequest.HeaderAdd}"
                  Command="{Binding RequestHeadersTableVm.AddNewCmd}">
                <Button.Content>
                  <Image
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Width="12"
                      Height="12">
                    <Image.Source>
                      <DrawingImage Drawing="{StaticResource IconAdd}"/>
                    </Image.Source>
                  </Image>
                </Button.Content>
              </Button>
              <controls:RequestHeadersTableView
                  x:Name="rhtvReqHeaders"
                  Grid.Column="0"
                  Grid.Row="1"
                  Margin="0,12,0,0"
                  DataContext="{Binding RequestHeadersTableVm}"/>
            </Grid>
          </TabItem>
          <!-- REQUEST BODY -->
          <TabItem Name="tabItemReqBody">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.HttpRequest.Body}"/>
            </TabItem.Header>
            <Grid Margin="-12,12,-12,12" RowDefinitions="Auto,*">
              <StackPanel
                  Grid.Column="0"
                  Grid.Row="0"
                  Orientation="Horizontal"
                  Margin="12,0,12,0"
                  Spacing="12">

                <ComboBox
                    x:Name="cbReqBodyMode"
                    Height="36"
                    Width="140"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch"
                    SelectedIndex="{Binding RequestBodyModeSelectedIndex, Mode=TwoWay}">
                  <ComboBoxItem
                      x:Name="cbiReqBodyModeNone"
                      Content="{Binding i18n.HttpRequest.BodyModeNone}"/>
                  <ComboBoxItem
                      x:Name="cbiReqBodyModeRaw"
                      Content="{Binding i18n.HttpRequest.BodyModeRaw}"/>
                  <ComboBoxItem
                      x:Name="cbiReqBodyModeFile"
                      Content="{Binding i18n.HttpRequest.BodyModeFile}"/>
                  <ComboBoxItem
                      x:Name="cbiReqBodyModeUrlEncoded"
                      Content="{Binding i18n.HttpRequest.BodyModeUrlEncoded}"/>
                  <ComboBoxItem
                      x:Name="cbiReqBodyModeFormData"
                      Content="{Binding i18n.HttpRequest.BodyModeFormData}"/>
                  <ComboBoxItem
                      x:Name="cbiReqBodyModeGraphQl"
                      Content="{Binding i18n.HttpRequest.BodyModeGraphQl}"/>
                </ComboBox>

                <AutoCompleteBox
                    x:Name="acbReqBodyRawContentType"
                    Height="36"
                    Width="190"
                    FontSize="14"
                    HorizontalAlignment="Left"
                    Watermark="{Binding i18n.HttpRequest.BodyRawContentTypeWatermark}"
                    ItemsSource="{Binding AllMimeTypes}"
                    SelectedItem="{Binding RequestRawContentType, Mode=TwoWay}"
                    FilterMode="Contains"
                    Classes.HasValidationProblem="{Binding HasRequestRawContentTypeValidationProblem}"
                    IsVisible="{Binding RequestBodyModeSelectedIndex,
                                Mode=OneWay,
                                Converter={StaticResource reqBodyModeMatch},
                                ConverterParameter=Raw}"/>
              </StackPanel>
              <!-- REQUEST BODY RAW -->
              <AvaloniaEdit:TextEditor
                  x:Name="teReqBodyRawContent"
                  Grid.Column="0"
                  Grid.Row="1"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Margin="12,12,12,0"
                  IsReadOnly="False"
                  Document="{Binding RequestRawContentTextDocument, Mode=TwoWay}"
                  IsVisible="{Binding RequestBodyModeSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource reqBodyModeMatch},
                              ConverterParameter=Raw}"/>
              <!-- REQUEST BODY FILE -->
              <StackPanel
                  x:Name="grReqBodyFile"
                  Grid.Column="0"
                  Grid.Row="1"
                  Spacing="12"
                  Margin="12,12,12,0"
                  VerticalAlignment="Stretch"
                  IsVisible="{Binding RequestBodyModeSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource reqBodyModeMatch},
                              ConverterParameter=File}">
                <AutoCompleteBox
                    Name="acbReqBodyFileContentType"
                    Height="36"
                    Width="180"
                    FontSize="14"
                    HorizontalAlignment="Left"
                    Watermark="{Binding i18n.HttpRequest.BodyFileContentTypeWatermark}"
                    Text="{Binding RequestFileContentType}"
                    ItemsSource="{Binding AllMimeTypes}"
                    FilterMode="Contains"
                    Classes.HasValidationProblem="{Binding HasRequestFileContentTypeValidationProblem}"/>
                <TextBox
                    Name="tbReqBodyFileSrcPath"
                    Watermark="{Binding i18n.HttpRequest.BodyFileSrcPathWatermark}"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    VerticalContentAlignment="Center"
                    Classes="SingleLine"
                    Classes.HasValidationProblem="{Binding HasRequestBodyFileSrcPathValidationProblem}"
                    Text="{Binding RequestBodyFileSrcPath}"/>
                <Button
                    Name="btReqBodyFileSearch"
                    Content="{Binding i18n.HttpRequest.BodyFileSearchFile}"
                    Command="{Binding SearchRequestBodyRawFileCmd}"
                    Classes="Secondary"/>
              </StackPanel>
              <!-- REQUEST BODY URL ENCODED -->
              <Grid
                  x:Name="grReqBodyUrlEncoded"
                  Grid.Column="0"
                  Grid.Row="1"
                  VerticalAlignment="Stretch"
                  IsVisible="{Binding RequestBodyModeSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource reqBodyModeMatch},
                              ConverterParameter=UrlEncoded}"
                  RowDefinitions="Auto,*">
                <Button
                    Name="btReqBodyUrlEncodedAddParam"
                    Grid.Column="0"
                    Grid.Row="0"
                    Margin="12,12,0,0"
                    Height="24"
                    Width="24"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Padding="2"
                    Classes="Secondary"
                    ToolTip.Tip="{Binding i18n.HttpRequest.BodyUrlEncodedParamAdd}"
                    Command="{Binding UrlEncodedParamsTableVm.AddNewCmd}">
                  <Button.Content>
                    <Image
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Width="12"
                        Height="12">
                      <Image.Source>
                        <DrawingImage Drawing="{StaticResource IconAdd}"/>
                      </Image.Source>
                    </Image>
                  </Button.Content>
                </Button>
                <DataGrid
                    Name="dgReqBodyUrlEncodedParams"
                    Grid.Column="0"
                    Grid.Row="1"
                    Margin="0,12,0,0"
                    AutoGenerateColumns="False"
                    ItemsSource="{Binding UrlEncodedParamsTableVm.Items}"
                    SelectionChanged="OnSelectedUrlEncodedParamsChanged"
                    CanUserResizeColumns="True"
                    HeadersVisibility="All"
                    Classes="DragAndDrop UrlEncodedParamsDragAndDrop">
                  <!--DataGrid.KeyBindings>
                      <KeyBinding Command="{Binding UrlEncodedParamsTableVm.CutCmd}" Gesture="Ctrl+X" />
                      <KeyBinding Command="{Binding UrlEncodedParamsTableVm.CopyCmd}" Gesture="Ctrl+C" />
                      <KeyBinding Command="{Binding UrlEncodedParamsTableVm.PasteCmd}" Gesture="Ctrl+V" />
                      <KeyBinding Command="{Binding UrlEncodedParamsTableVm.DuplicateCmd}" Gesture="Ctrl+D" />
                      <KeyBinding Command="{Binding UrlEncodedParamsTableVm.DeleteCmd}" Gesture="Delete" />
                    </DataGrid.KeyBindings-->
                  <DataGrid.ContextMenu>
                    <ContextMenu>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Cut}"
                          Command="{Binding UrlEncodedParamsTableVm.CutCmd}"
                          InputGesture="Ctrl+X"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Copy}"
                          Command="{Binding UrlEncodedParamsTableVm.CopyCmd}"
                          InputGesture="Ctrl+C"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Paste}"
                          Command="{Binding UrlEncodedParamsTableVm.PasteCmd}"
                          InputGesture="Ctrl+V"
                          IsEnabled="{Binding UrlEncodedParamsTableVm.InnerClipboardArea.CanPaste}"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Delete}"
                          Command="{Binding UrlEncodedParamsTableVm.DeleteCmd}"
                          InputGesture="Delete"/>
                    </ContextMenu>
                  </DataGrid.ContextMenu>
                  <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        Width="0.22*"
                        Binding="{Binding Enabled}">
                      <DataGridCheckBoxColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyUrlEncodedParamEnabled}"/>
                      </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn
                        Width="0.32*"
                        Binding="{Binding Key}">
                      <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyUrlEncodedParamName}"/>
                      </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="0.32*"
                        Binding="{Binding Value}">
                      <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyUrlEncodedParamValue}"/>
                      </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn
                        Width="0.14*"
                        Header="">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <Button
                              Command="{Binding RemoveParamCmd}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              Classes="Trash">
                          </Button>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Grid>
              <!-- REQUEST BODY MULTIPART FORM DATA -->
              <Grid
                  x:Name="grReqBodyFormData"
                  Grid.Column="0"
                  Grid.Row="1"
                  VerticalAlignment="Stretch"
                  IsVisible="{Binding RequestBodyModeSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource reqBodyModeMatch},
                              ConverterParameter=FormData}"
                  RowDefinitions="Auto,*">
                <StackPanel
                    Grid.Column="0"
                    Grid.Row="0"
                    Orientation="Horizontal"
                    Margin="12,12,0,0">
                  <Button
                      Name="btReqBodyFormDataAddTextParam"
                      Content="{Binding i18n.HttpRequest.BodyFormDataTextParamAdd}"
                      Margin="0,0,3,0"
                      Command="{Binding FormDataParamsTableVm.AddNewFormDataTextParamCmd}"
                      Classes="Secondary"/>
                  <Button
                      Name="btReqBodyFormDataAddFileParam"
                      Content="{Binding i18n.HttpRequest.BodyFormDataFileParamAdd}"
                      Margin="3,0,0,0"
                      Command="{Binding FormDataParamsTableVm.AddNewFormDataFileParamCmd}"
                      Classes="Secondary"/>
                </StackPanel>
                <DataGrid
                    Name="dgReqBodyFormDataParams"
                    Grid.Column="0"
                    Grid.Row="1"
                    Margin="0,12,0,0"
                    AutoGenerateColumns="False"
                    ItemsSource="{Binding FormDataParamsTableVm.Items}"
                    SelectionChanged="OnSelectedFormDataParamsChanged"
                    CanUserResizeColumns="True"
                    HeadersVisibility="All"
                    Classes="DragAndDrop FormDataParamsDragAndDrop">
                  <!--DataGrid.KeyBindings>
                    <KeyBinding Command="{Binding FormDataParamsTableVm.CutCmd}" Gesture="Ctrl+X" />
                    <KeyBinding Command="{Binding FormDataParamsTableVm.CopyCmd}" Gesture="Ctrl+C" />
                    <KeyBinding Command="{Binding FormDataParamsTableVm.PasteCmd}" Gesture="Ctrl+V" />
                    <KeyBinding Command="{Binding FormDataParamsTableVm.DuplicateCmd}" Gesture="Ctrl+D" />
                    <KeyBinding Command="{Binding FormDataParamsTableVm.DeleteCmd}" Gesture="Delete" />
                  </DataGrid.KeyBindings-->
                  <DataGrid.ContextMenu>
                    <ContextMenu>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Cut}"
                          Command="{Binding FormDataParamsTableVm.CutCmd}"
                          InputGesture="Ctrl+X"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Copy}"
                          Command="{Binding FormDataParamsTableVm.CopyCmd}"
                          InputGesture="Ctrl+C"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Paste}"
                          Command="{Binding FormDataParamsTableVm.PasteCmd}"
                          InputGesture="Ctrl+V"
                          IsEnabled="{Binding FormDataParamsTableVm.InnerClipboardArea.CanPaste}"/>
                      <MenuItem
                          Header="{Binding i18n.ContextMenu.Delete}"
                          Command="{Binding FormDataParamsTableVm.DeleteCmd}"
                          InputGesture="Delete"/>
                    </ContextMenu>
                  </DataGrid.ContextMenu>
                  <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        Width="0.11*"
                        Binding="{Binding Enabled}">
                      <DataGridCheckBoxColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyFormDataParamEnabled}"/>
                      </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn
                        Width="0.13*"
                        Binding="{Binding Type}"
                        IsReadOnly="True">
                      <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyFormDataParamType}"/>
                      </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="0.2*"
                        Binding="{Binding Key}">
                      <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyFormDataParamName}"/>
                      </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="0.21*"
                        Binding="{Binding Value}">
                      <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyFormDataParamTextOrSrcPath}"/>
                      </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="0.23*"
                        Binding="{Binding ContentType}">
                      <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding i18n.HttpRequest.BodyFormDataParamContentType}"/>
                      </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn
                        Width="0.12*"
                        Header="">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <Button
                              Command="{Binding RemoveParamCmd}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              Classes="Trash">
                          </Button>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Grid>
              <!-- REQUEST BODY GRAPH QL -->
              <Grid
                  x:Name="grReqBodyGraphQl"
                  Grid.Column="0"
                  Grid.Row="1"
                  Margin="12,12,12,0"
                  VerticalAlignment="Stretch"
                  IsVisible="{Binding RequestBodyModeSelectedIndex,
                              Mode=OneWay,
                              Converter={StaticResource reqBodyModeMatch},
                              ConverterParameter=GraphQl}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition
                      Width="0.5*"
                      MinWidth="40"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition
                      Width="0.5*"
                      MinWidth="40"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBox
                    Name="tbReqBodyGraphQlQuery"
                    Grid.Column="0"
                    Grid.Row="0"
                    Watermark="{Binding i18n.HttpRequest.BodyGraphQlQueryWatermark}"
                    HorizontalAlignment="Stretch"
                    Classes="CodeTextBox"
                    Text="{Binding RequestBodyGraphQlQuery}"/>
                <GridSplitter
                    Grid.Column="1"
                    Grid.Row="0"
                    Margin="12,0,12,0"
                    Width="2"
                    VerticalAlignment="Stretch"
                    Classes="Separator"/>
                <TextBox
                    Name="tbReqBodyGraphQlVariables"
                    Grid.Column="2"
                    Grid.Row="0"
                    Watermark="{Binding i18n.HttpRequest.BodyGraphQlVariablesWatermark}"
                    HorizontalAlignment="Stretch"
                    Classes="CodeTextBox"
                    Text="{Binding RequestBodyGraphQlVariables}"/>
              </Grid>
            </Grid>
          </TabItem>
          <!-- REQUEST CUSTOM AUTH -->
          <TabItem Name="tabItemReqAuth">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.HttpRequest.CustomAuth}"/>
            </TabItem.Header>
            <v:RequestAuthView
                x:Name="reqAuthView"
                DataContext="{Binding RequestAuthDataCtx}"/>
          </TabItem>
        </TabControl>
      </Grid>
      <GridSplitter
          Margin="12,0,12,0"
          Grid.Column="1"
          Grid.Row="0"
          Width="2"
          VerticalAlignment="Stretch"
          Classes="Separator"/>
      <!-- RESPONSE -->
      <Grid
          Grid.Column="2"
          Grid.Row="0"
          RowDefinitions="Auto,*,Auto">
        <TextBlock
            Name="tbResTitle"
            Grid.Column="0"
            Grid.Row="0"
            Margin="12,28,12,0"
            Classes="SectionTitle"
            Text="{Binding ResponseDataCtx.ResponseStatusCodeElapsedTimeTitle}"/>
        <TabControl
            Name="tabControlRes"
            Grid.Column="0"
            Grid.Row="1"
            Margin="12,24,12,12"
            TabStripPlacement="Top"
            VerticalAlignment="Stretch"
            SelectedIndex="{Binding ResponseDataCtx.ResponseTabsSelectedIndex}">
          <!-- RESPONSE HEADERS AND TRAILERS -->
          <TabItem Name="tabItemResHeaders">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.HttpResponse.Headers}"/>
            </TabItem.Header>
            <controls:ResponseHeadersTableView
                x:Name="rhtvResHeaders"
                Margin="-12,12,-12,12"
                DataContext="{Binding ResponseDataCtx.ResponseHeadersAndTrailersTableVm}"/>
          </TabItem>
          <!-- RESPONSE BODY -->
          <TabItem Name="tabItemResBody">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.HttpResponse.Body}"/>
            </TabItem.Header>
            <Grid
                Margin="-12,12,-12,0"
                VerticalAlignment="Stretch"
                RowDefinitions="*,Auto">

              <!-- AcceptsReturn="True" allows for horizontal scrollbar -->
              <AvaloniaEdit:TextEditor
                  Name="ResponseBodyRawContentEditor"
                  Grid.Column="0"
                  Grid.Row="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Margin="12,0,12,0"
                  IsReadOnly="True"
                  Document="{Binding ResponseDataCtx.ResponseRawContentTextDocument, Mode=TwoWay}"/>
              <StackPanel
                  Grid.Column="0"
                  Grid.Row="1"
                  Orientation="Horizontal"
                  Margin="0,12,0,0">
                <Button
                    Name="btResBodySaveToFile"
                    Content="{Binding i18n.HttpResponse.BodySaveToFile}"
                    ToolTip.Tip="{Binding i18n.HttpResponse.BodySaveToFileToolTip}"
                    ToolTip.Placement="Top"
                    Margin="0,0,6,12"
                    IsVisible="{Binding ResponseDataCtx.IsSaveResponseBodyToFileVisible}"
                    Command="{Binding ResponseDataCtx.SaveResponseBodyToFileCmd}"
                    Classes="Secondary"/>
                <Button
                    Name="btResExportLogFile"
                    Content="{Binding i18n.HttpResponse.ExportLog}"
                    ToolTip.Tip="{Binding i18n.HttpResponse.ExportLogToolTip}"
                    ToolTip.Placement="Top"
                    Margin="6,0,6,12"
                    IsVisible="{Binding ResponseDataCtx.IsExportLogFileVisible}"
                    Command="{Binding ResponseDataCtx.ExportLogFileCmd}"
                    Classes="Secondary"/>
                <Button
                    Name="btResDisableTlsVerification"
                    Content="{Binding i18n.HttpResponse.DisableTlsVerification}"
                    Margin="6,0,0,12"
                    IsVisible="{Binding ResponseDataCtx.IsDisableTlsVerificationVisible}"
                    Command="{Binding ResponseDataCtx.DisableTlsVerificationCmd}"
                    Classes="Primary"/>
              </StackPanel>

            </Grid>
          </TabItem>
          <!-- RESPONSE CAPTURE -->
          <TabItem Name="tabItemResCapture">
            <TabItem.Header>
              <TextBlock
                  Classes="TabItemHeader"
                  Text="{Binding i18n.HttpResponse.Capture}"/>
            </TabItem.Header>
            <Grid RowDefinitions="Auto,*">
              <StackPanel
                  Grid.Column="0"
                  Grid.Row="0"
                  Orientation="Horizontal"
                  Margin="0,8,0,0">
                <Button
                    x:Name="btResCaptureExecuteCaptures"
                    Margin="3,0,3,0"
                    Command="{Binding ResponseDataCtx.ExecuteCapturesCmd}"
                    ToolTip.Tip="{Binding i18n.HttpResponse.ExecuteCapturesTooltip}"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Classes="Secondary">
                  <Panel>
                    <Image
                        Width="12"
                        Height="12"
                        Margin="0,3,0,3"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                      <Image.Source>
                        <DrawingImage Drawing="{StaticResource IconPlay}"/>
                      </Image.Source>
                    </Image>
                  </Panel>
                </Button>
                <Button
                    Name="btResCaptureAddHeaderCapture"
                    Content="{Binding i18n.HttpResponse.CaptureAddHeaderCapture}"
                    Margin="3,0,3,0"
                    Command="{Binding ResCapturesTableVm.AddNewHeaderCaptureCmd}"
                    Classes="Secondary"/>
                <Button
                    Name="btResCaptureAddBodyCapture"
                    Content="{Binding i18n.HttpResponse.CaptureAddBodyCapture}"
                    Margin="3,0,3,0"
                    Command="{Binding ResCapturesTableVm.AddNewBodyCaptureCmd}"
                    Classes="Secondary"/>
                <TextBlock
                    VerticalAlignment="Center"
                    Margin="6,0,0,0"
                    ToolTip.Tip="{Binding i18n.HttpResponse.CaptureTip}"
                    Classes="TipQuestionMark"/>
                <!-- Adding a TextBlock Tip at the end of the Grid causes the separator GridSplitter
                to "jam" while resizing -->
              </StackPanel>
              <DataGrid
                  Grid.Column="0"
                  Grid.Row="1"
                  Name="dgResCaptures"
                  Margin="-12,12,-12,12"
                  VerticalAlignment="Stretch"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding ResCapturesTableVm.Items}"
                  SelectionChanged="OnSelectedResponseCapturesChanged"
                  CanUserResizeColumns="True"
                  HeadersVisibility="All"
                  Classes="DragAndDrop ResponseCapturesDragAndDrop">
                <!--DataGrid.KeyBindings>
                  <KeyBinding Command="{Binding ResponseDataCtx.ResponseHeadersAndTrailersTableVm.CopyCmd}" Gesture="Ctrl+C" />
                </DataGrid.KeyBindings-->
                <DataGrid.ContextMenu>
                  <ContextMenu>
                    <MenuItem
                        Header="{Binding i18n.ContextMenu.Cut}"
                        Command="{Binding ResCapturesTableVm.CutCmd}"
                        InputGesture="Ctrl+X"/>
                    <MenuItem
                        Header="{Binding i18n.ContextMenu.Copy}"
                        Command="{Binding ResCapturesTableVm.CopyCmd}"
                        InputGesture="Ctrl+C"/>
                    <MenuItem
                        Header="{Binding i18n.ContextMenu.Paste}"
                        Command="{Binding ResCapturesTableVm.PasteCmd}"
                        InputGesture="Ctrl+V"
                        IsEnabled="{Binding ResCapturesTableVm.InnerClipboardArea.CanPaste}"/>
                    <MenuItem
                        Header="{Binding i18n.ContextMenu.Delete}"
                        Command="{Binding ResCapturesTableVm.DeleteCmd}"
                        InputGesture="Delete"/>
                  </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                  <DataGridTextColumn
                      Width="0.25*"
                      Binding="{Binding TargetVariable}">
                    <DataGridTextColumn.Header>
                      <TextBlock Text="{Binding i18n.HttpResponse.CaptureTargetVariable}"/>
                    </DataGridTextColumn.Header>
                  </DataGridTextColumn>
                  <DataGridTextColumn
                      Width="0.15*"
                      Binding="{Binding Type}"
                      IsReadOnly="True">
                    <DataGridTextColumn.Header>
                      <TextBlock Text="{Binding i18n.HttpResponse.CaptureType}"/>
                    </DataGridTextColumn.Header>
                  </DataGridTextColumn>
                  <DataGridTextColumn
                      Width="0.30*"
                      Binding="{Binding HeaderNameOrBodyPath}">
                    <DataGridTextColumn.Header>
                      <TextBlock Text="{Binding i18n.HttpResponse.CaptureHeaderNameOrBodyPath}"/>
                    </DataGridTextColumn.Header>
                  </DataGridTextColumn>
                  <DataGridTextColumn
                      Width="0.22*"
                      Binding="{Binding CapturedValue}"
                      Foreground="{DynamicResource ResponseCapturedValueTextBrush}">
                    <!-- TODO: Set text colour using Classes and ComponentsCustomStyling.xaml -->
                    <DataGridTextColumn.Header>
                      <TextBlock Text="{Binding i18n.HttpResponse.CaptureCapturedValue}"/>
                    </DataGridTextColumn.Header>
                  </DataGridTextColumn>
                  <DataGridTemplateColumn
                      Width="0.08*"
                      Header="">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <Button
                            Command="{Binding RemoveCaptureCmd}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Classes="Trash">
                        </Button>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                </DataGrid.Columns>
              </DataGrid>
            </Grid>
          </TabItem>
        </TabControl>
        <!-- RESPONSE PROGRESS BAR -->
        <ProgressBar
            Name="pbResProgressBar"
            Grid.Column="0"
            Grid.Row="2"
            IsIndeterminate="True"
            Margin="12,0,12,24"
            HorizontalAlignment="Stretch"
            IsVisible="{Binding IsSendRequestProgressBarVisible}"/>
      </Grid>
    </Grid>
  </Grid>
</UserControl>