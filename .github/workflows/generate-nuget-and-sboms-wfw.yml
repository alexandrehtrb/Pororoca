name: Generate SBOMs and Pororoca.Test NuGet

on:
  workflow_call:
    inputs:
      uploadArtifactsToRelease:
        required: false
        default: false
        type: boolean
      postUnitTestsCoverageInPR:
        required: false
        default: false
        type: boolean
      prNumber:
        required: false
        default: 0
        type: number

jobs:

  generatePororocaTestNuget:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.204

    - name: Install CycloneDX SBOM tool
      run: dotnet tool install --global CycloneDX

    - name: Restore solution
      run: dotnet restore --nologo --verbosity quiet

    - name: Audit Pororoca.Test project
      shell: pwsh
      run: |
        $projectPath = "./src/Pororoca.Test/Pororoca.Test.csproj"
        $jsonObj = (dotnet list $projectPath package --vulnerable --include-transitive --format json) | ConvertFrom-Json;
        $hasAnyVulnerability = ($jsonObj.projects[0].frameworks -ne $null);
        if ($hasAnyVulnerability) {
          dotnet list package --vulnerable --include-transitive;
          exit 1;
        }

    - name: Build solution
      run: dotnet build --no-restore --configuration Release --nologo --verbosity quiet

    - name: Execute unit tests
      run: dotnet test --no-build --configuration Release --nologo --verbosity quiet --filter FullyQualifiedName!~Pororoca.Test.Tests --collect:"XPlat Code Coverage" --results-directory ./TestResults/

    - name: Report unit tests coverage
      if: ${{ inputs.postUnitTestsCoverageInPR == true }}
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
      with:
        reports: TestResults/**/coverage.cobertura.xml
        targetdir: TestResults
        reporttypes: JsonSummary
        assemblyfilters: +Pororoca.Domain;+Pororoca.Domain.OpenAPI
        filefilters: -*.g.cs

    - name: Add unit tests coverage comment to PR
      if: ${{ inputs.postUnitTestsCoverageInPR == true }}
      shell: pwsh
      run: |
        $summary = (Get-Content ./TestResults/Summary.json) | ConvertFrom-Json;
        $lineCovBadgeColor = if ($summary.summary.linecoverage -ge 90.0) { "080" } else { "800" };
        $branchCovBadgeColor = if ($summary.summary.branchcoverage -ge 80.0) { "080" } else { "800" };
        $linesBadge = "![Line coverage](https://img.shields.io/badge/lines-" + $summary.summary.linecoverage + "%25-" + $lineCovBadgeColor + ")";
        $branchesBadge = "![Branch coverage](https://img.shields.io/badge/branches-" + $summary.summary.branchcoverage + "%25-" + $branchCovBadgeColor + ")";
        $text = "`# Unit tests code coverage " + $linesBadge + " " + $branchesBadge + "`n`n" + "| Assembly | Line coverage | Branch coverage |`n|---|---|---|`n";
        foreach ($assembly in $summary.coverage.assemblies)
        {
            $text += "| **$($assembly.name)** | $($assembly.coverage)% | $($assembly.branchcoverage)% |`n"
        }
        Set-Content -Path ./TestResults/SummaryGithub2.md -Value $text
        gh pr comment $env:PR_NUMBER --body-file ./TestResults/SummaryGithub2.md
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ inputs.prNumber }}

    - name: Read package version
      shell: pwsh
      run: |
        ([XML]$nugetCsprojXml = Get-Content ./src/Pororoca.Test/Pororoca.Test.csproj)
        $versionName = $nugetCsprojXml.Project.PropertyGroup.PackageVersion
        echo "VERSION_NAME=${versionName}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Generate Pororoca.Test SBOM file
      shell: pwsh
      run: dotnet CycloneDX ./src/Pororoca.Test/Pororoca.Test.csproj -o ./out/ -f sbom_pororoca_test.json -sv $env:VERSION_NAME --json

    - name: Generate Pororoca.Desktop SBOM file
      shell: pwsh
      run: dotnet CycloneDX ./src/Pororoca.Desktop/Pororoca.Desktop.csproj -o ./out/ -f sbom_pororoca_desktop.json -sv $env:VERSION_NAME --json

    - name: Pack NuGet
      run: dotnet pack ./src/Pororoca.Test/Pororoca.Test.csproj --nologo --verbosity quiet --configuration Release

    - name: Upload NuGet package to workflow results
      if: ${{ inputs.uploadArtifactsToRelease == false }} # no need if is uploading to release
      uses: actions/upload-artifact@v4
      with:
        compression-level: 0
        name: ${{ format('Pororoca.Test.{0}.nupkg', env.VERSION_NAME) }}
        path: ${{ format('./src/Pororoca.Test/bin/Release/Pororoca.Test.{0}.nupkg', env.VERSION_NAME) }}

    - name: Upload Pororoca.Desktop SBOM file to workflow results
      if: ${{ inputs.uploadArtifactsToRelease == false }} # no need if is uploading to release
      uses: actions/upload-artifact@v4
      with:
        compression-level: 0
        name: sbom_pororoca_desktop.json
        path: ./out/sbom_pororoca_desktop.json

    - name: Upload Pororoca.Test SBOM file to workflow results
      if: ${{ inputs.uploadArtifactsToRelease == false }} # no need if is uploading to release
      uses: actions/upload-artifact@v4
      with:
        compression-level: 0
        name: sbom_pororoca_test.json
        path: ./out/sbom_pororoca_test.json

    - name: Upload artifacts to release
      if: ${{ inputs.uploadArtifactsToRelease == true }}
      run: gh release upload $RELEASE_NAME $NUGET_FILE_PATH $DESKTOP_SBOM_FILE_PATH $NUGET_SBOM_FILE_PATH --clobber
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_NAME: ${{ env.VERSION_NAME }}
        NUGET_FILE_PATH: ${{ format('./src/Pororoca.Test/bin/Release/Pororoca.Test.{0}.nupkg', env.VERSION_NAME) }}
        DESKTOP_SBOM_FILE_PATH: ./out/sbom_pororoca_desktop.json
        NUGET_SBOM_FILE_PATH: ./out/sbom_pororoca_test.json
